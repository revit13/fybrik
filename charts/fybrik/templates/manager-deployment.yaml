{{- if include "fybrik.isEnabled" (tuple .Values.manager.enabled (or .Values.coordinator.enabled .Values.worker.enabled)) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manager
  labels:
    control-plane: controller-manager
    app.kubernetes.io/component: manager
    {{- include "fybrik.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.manager.replicaCount }}
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/component: manager
      {{- include "fybrik.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.manager.podAnnotations }}
      annotations:
        sidecar.istio.io/inject: "true"
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        control-plane: controller-manager
        fybrik.io/componentType: manager
        app.kubernetes.io/component: manager
        {{- include "fybrik.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.manager.serviceAccount.name }}
      securityContext:
        {{- include "fybrik.processPodSecurityContext" (dict "context" . "podSecurityContext" .Values.manager.podSecurityContext) | nindent 8 }}
      {{- if .Values.manager.solver.image }}
      initContainers:
        - name: init-solver
          image: {{ .Values.manager.solver.image }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          command:
          - cp 
          - -rf
          - "/data/tools"
          - "/tmp/solver/"
          volumeMounts:
            - name: solver-volume
              mountPath: /tmp/solver  
      {{- end }}
      containers:
        {{- if .Values.manager.socat }}
        - name: integration-tests
          image: alpine/socat:latest
          command:
          - socat
          - TCP4-LISTEN:5000,fork
          - TCP4:kind-registry:5000
        {{- end }}
        {{- if and .Values.clusterScoped .Values.manager.prometheus }}
        - name: kube-rbac-proxy
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
          args:
            - "--secure-listen-address=0.0.0.0:8443"
            - "--upstream=http://127.0.0.1:8080/"
            - "--logtostderr=true"
            - "--v=10"
          ports:
          - containerPort: 8443
            name: https
        {{- end }}
        - name: manager
          image: {{ include "fybrik.image" ( tuple $ .Values.manager ) }}
          imagePullPolicy: {{ .Values.manager.imagePullPolicy | default .Values.global.imagePullPolicy }}
          args:
            {{- if .Values.manager.overrideArgs }}
            {{- toYaml .Values.manager.overrideArgs | nindent 12 }}
            {{- else }}
            {{- if and .Values.clusterScoped .Values.manager.prometheus }}
            - "--metrics-bind-addr=127.0.0.1:8080"
            {{- end }}
            - "--leader-elect"
            {{- if .Values.coordinator.enabled }}
            - "--enable-application-controller"
            - "--enable-plotter-controller"
            {{- end }}
            {{- if .Values.worker.enabled }}
            - "--enable-blueprint-controller"
            {{- end }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: fybrik-config
            {{- if include "fybrik.isRazeeConfigurationEnabled" . }}
            - secretRef:
                name: razee-credentials
            {{- end }}
          env:
            - name: TLS_ENABLED
              value: {{ .Values.global.tls.enabled | quote | toString }}
            {{- if .Values.global.tls.enabled }}
            - name: MTLS_ENABLED
              value: {{ .Values.global.tls.mtlsEnabled | quote | toString }}
            - name: CERT_SECRET_NAME
              value: {{ .Values.manager.tls.certs.clientCertSecretName }}
            - name: CERT_SECRET_NAMESPACE
              value: {{ .Values.manager.tls.certs.clientCertSecretNamespace }}
            - name: CACERT_SECRET_NAME
              value: {{ .Values.manager.tls.certs.cacertSecretName }}
            - name: CACERT_SECRET_NAMESPACE
              value: {{ .Values.manager.tls.certs.cacertSecretNamespace }}
            {{- end }}
            - name: ENABLE_WEBHOOKS
            {{- if .Values.clusterScoped }} 
              value: "true"
            {{- else }}
              value: "false"
            {{- end }}

            - name: MODULES_NAMESPACE
              value: {{ include "fybrik.getModulesNamespace" . }}
              
            {{- if .Values.manager.solver.image }}
            - name: CSP_PATH
              value: "/tmp/solver/tools/bin/solver"
            {{- end }}

            {{- if .Values.applicationNamespace }}
            - name: APPLICATION_NAMESPACE
              value: {{ .Values.applicationNamespace }}
            {{- end }}

            {{- if .Values.manager.extraEnvs }}
            {{- toYaml .Values.manager.extraEnvs | nindent 12 }}
            {{- end }}
            {{- if .Values.manager.chartVolume }}
            - name: CHECK_LOCAL_CHARTS
              value: "true"
            {{- end }}
          {{- if .Values.clusterScoped }} 
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          {{- end }}
          volumeMounts:
            {{- if .Values.clusterScoped }}
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true  
            {{- end }}     
            - mountPath: /tmp/taxonomy
              name: fybrik-taxonomy
            - mountPath: /tmp/adminconfig
              name: fybrik-adminconfig
            {{- if .Values.manager.solver.image }}
            - mountPath: /tmp/solver
              name: solver-volume
            {{- end }}
            {{- if .Values.manager.chartVolume }}
            - mountPath: /opt/fybrik/
              name: charts
            {{- end }}
          securityContext:
          {{- mergeOverwrite (deepCopy .Values.global.containerSecurityContext) .Values.manager.containerSecurityContext | toYaml | nindent 12 }}
          resources:
            {{- toYaml .Values.manager.resources | nindent 12 }}
      terminationGracePeriodSeconds: 10
      volumes:
        {{- if .Values.clusterScoped }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
        {{- end }}
        {{- if .Values.manager.solver.image }}
        - name: solver-volume
          emptyDir: {}
        {{- end }}
        - name: fybrik-taxonomy
          configMap:
            name: fybrik-taxonomy-config
        - name: fybrik-adminconfig
          configMap:
            name: fybrik-adminconfig
        {{- if .Values.manager.chartVolume }}
        - name: charts
          persistentVolumeClaim:
            claimName: "{{ .Values.manager.chartVolume }}"
        {{- end }}
      {{- with .Values.manager.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.manager.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.manager.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
