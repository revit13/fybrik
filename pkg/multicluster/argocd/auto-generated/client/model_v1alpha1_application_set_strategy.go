/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1ApplicationSetStrategy ApplicationSetStrategy configures how generated Applications are updated in sequence.
type V1alpha1ApplicationSetStrategy struct {
	RollingSync *V1alpha1ApplicationSetRolloutStrategy `json:"rollingSync,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewV1alpha1ApplicationSetStrategy instantiates a new V1alpha1ApplicationSetStrategy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ApplicationSetStrategy() *V1alpha1ApplicationSetStrategy {
	this := V1alpha1ApplicationSetStrategy{}
	return &this
}

// NewV1alpha1ApplicationSetStrategyWithDefaults instantiates a new V1alpha1ApplicationSetStrategy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ApplicationSetStrategyWithDefaults() *V1alpha1ApplicationSetStrategy {
	this := V1alpha1ApplicationSetStrategy{}
	return &this
}

// GetRollingSync returns the RollingSync field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSetStrategy) GetRollingSync() V1alpha1ApplicationSetRolloutStrategy {
	if o == nil || o.RollingSync == nil {
		var ret V1alpha1ApplicationSetRolloutStrategy
		return ret
	}
	return *o.RollingSync
}

// GetRollingSyncOk returns a tuple with the RollingSync field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSetStrategy) GetRollingSyncOk() (*V1alpha1ApplicationSetRolloutStrategy, bool) {
	if o == nil || o.RollingSync == nil {
		return nil, false
	}
	return o.RollingSync, true
}

// HasRollingSync returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSetStrategy) HasRollingSync() bool {
	if o != nil && o.RollingSync != nil {
		return true
	}

	return false
}

// SetRollingSync gets a reference to the given V1alpha1ApplicationSetRolloutStrategy and assigns it to the RollingSync field.
func (o *V1alpha1ApplicationSetStrategy) SetRollingSync(v V1alpha1ApplicationSetRolloutStrategy) {
	o.RollingSync = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSetStrategy) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSetStrategy) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSetStrategy) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1alpha1ApplicationSetStrategy) SetType(v string) {
	o.Type = &v
}

func (o V1alpha1ApplicationSetStrategy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RollingSync != nil {
		toSerialize["rollingSync"] = o.RollingSync
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1ApplicationSetStrategy struct {
	value *V1alpha1ApplicationSetStrategy
	isSet bool
}

func (v NullableV1alpha1ApplicationSetStrategy) Get() *V1alpha1ApplicationSetStrategy {
	return v.value
}

func (v *NullableV1alpha1ApplicationSetStrategy) Set(val *V1alpha1ApplicationSetStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ApplicationSetStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ApplicationSetStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ApplicationSetStrategy(val *V1alpha1ApplicationSetStrategy) *NullableV1alpha1ApplicationSetStrategy {
	return &NullableV1alpha1ApplicationSetStrategy{value: val, isSet: true}
}

func (v NullableV1alpha1ApplicationSetStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ApplicationSetStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


