/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1ApplicationSourcePluginParameter struct for V1alpha1ApplicationSourcePluginParameter
type V1alpha1ApplicationSourcePluginParameter struct {
	// Array is the value of an array type parameter.
	Array *[]string `json:"array,omitempty"`
	// Map is the value of a map type parameter.
	Map *map[string]string `json:"map,omitempty"`
	// Name is the name identifying a parameter.
	Name *string `json:"name,omitempty"`
	// String_ is the value of a string type parameter.
	String *string `json:"string,omitempty"`
}

// NewV1alpha1ApplicationSourcePluginParameter instantiates a new V1alpha1ApplicationSourcePluginParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ApplicationSourcePluginParameter() *V1alpha1ApplicationSourcePluginParameter {
	this := V1alpha1ApplicationSourcePluginParameter{}
	return &this
}

// NewV1alpha1ApplicationSourcePluginParameterWithDefaults instantiates a new V1alpha1ApplicationSourcePluginParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ApplicationSourcePluginParameterWithDefaults() *V1alpha1ApplicationSourcePluginParameter {
	this := V1alpha1ApplicationSourcePluginParameter{}
	return &this
}

// GetArray returns the Array field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourcePluginParameter) GetArray() []string {
	if o == nil || o.Array == nil {
		var ret []string
		return ret
	}
	return *o.Array
}

// GetArrayOk returns a tuple with the Array field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) GetArrayOk() (*[]string, bool) {
	if o == nil || o.Array == nil {
		return nil, false
	}
	return o.Array, true
}

// HasArray returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) HasArray() bool {
	if o != nil && o.Array != nil {
		return true
	}

	return false
}

// SetArray gets a reference to the given []string and assigns it to the Array field.
func (o *V1alpha1ApplicationSourcePluginParameter) SetArray(v []string) {
	o.Array = &v
}

// GetMap returns the Map field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourcePluginParameter) GetMap() map[string]string {
	if o == nil || o.Map == nil {
		var ret map[string]string
		return ret
	}
	return *o.Map
}

// GetMapOk returns a tuple with the Map field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) GetMapOk() (*map[string]string, bool) {
	if o == nil || o.Map == nil {
		return nil, false
	}
	return o.Map, true
}

// HasMap returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) HasMap() bool {
	if o != nil && o.Map != nil {
		return true
	}

	return false
}

// SetMap gets a reference to the given map[string]string and assigns it to the Map field.
func (o *V1alpha1ApplicationSourcePluginParameter) SetMap(v map[string]string) {
	o.Map = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourcePluginParameter) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1alpha1ApplicationSourcePluginParameter) SetName(v string) {
	o.Name = &v
}

// GetString returns the String field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSourcePluginParameter) GetString() string {
	if o == nil || o.String == nil {
		var ret string
		return ret
	}
	return *o.String
}

// GetStringOk returns a tuple with the String field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) GetStringOk() (*string, bool) {
	if o == nil || o.String == nil {
		return nil, false
	}
	return o.String, true
}

// HasString returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSourcePluginParameter) HasString() bool {
	if o != nil && o.String != nil {
		return true
	}

	return false
}

// SetString gets a reference to the given string and assigns it to the String field.
func (o *V1alpha1ApplicationSourcePluginParameter) SetString(v string) {
	o.String = &v
}

func (o V1alpha1ApplicationSourcePluginParameter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Array != nil {
		toSerialize["array"] = o.Array
	}
	if o.Map != nil {
		toSerialize["map"] = o.Map
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.String != nil {
		toSerialize["string"] = o.String
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1ApplicationSourcePluginParameter struct {
	value *V1alpha1ApplicationSourcePluginParameter
	isSet bool
}

func (v NullableV1alpha1ApplicationSourcePluginParameter) Get() *V1alpha1ApplicationSourcePluginParameter {
	return v.value
}

func (v *NullableV1alpha1ApplicationSourcePluginParameter) Set(val *V1alpha1ApplicationSourcePluginParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ApplicationSourcePluginParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ApplicationSourcePluginParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ApplicationSourcePluginParameter(val *V1alpha1ApplicationSourcePluginParameter) *NullableV1alpha1ApplicationSourcePluginParameter {
	return &NullableV1alpha1ApplicationSourcePluginParameter{value: val, isSet: true}
}

func (v NullableV1alpha1ApplicationSourcePluginParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ApplicationSourcePluginParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


