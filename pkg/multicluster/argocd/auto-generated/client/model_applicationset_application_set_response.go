/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// ApplicationsetApplicationSetResponse struct for ApplicationsetApplicationSetResponse
type ApplicationsetApplicationSetResponse struct {
	Applicationset *V1alpha1ApplicationSet `json:"applicationset,omitempty"`
	Project        *string                 `json:"project,omitempty"`
}

// NewApplicationsetApplicationSetResponse instantiates a new ApplicationsetApplicationSetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationsetApplicationSetResponse() *ApplicationsetApplicationSetResponse {
	this := ApplicationsetApplicationSetResponse{}
	return &this
}

// NewApplicationsetApplicationSetResponseWithDefaults instantiates a new ApplicationsetApplicationSetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationsetApplicationSetResponseWithDefaults() *ApplicationsetApplicationSetResponse {
	this := ApplicationsetApplicationSetResponse{}
	return &this
}

// GetApplicationset returns the Applicationset field value if set, zero value otherwise.
func (o *ApplicationsetApplicationSetResponse) GetApplicationset() V1alpha1ApplicationSet {
	if o == nil || o.Applicationset == nil {
		var ret V1alpha1ApplicationSet
		return ret
	}
	return *o.Applicationset
}

// GetApplicationsetOk returns a tuple with the Applicationset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsetApplicationSetResponse) GetApplicationsetOk() (*V1alpha1ApplicationSet, bool) {
	if o == nil || o.Applicationset == nil {
		return nil, false
	}
	return o.Applicationset, true
}

// HasApplicationset returns a boolean if a field has been set.
func (o *ApplicationsetApplicationSetResponse) HasApplicationset() bool {
	if o != nil && o.Applicationset != nil {
		return true
	}

	return false
}

// SetApplicationset gets a reference to the given V1alpha1ApplicationSet and assigns it to the Applicationset field.
func (o *ApplicationsetApplicationSetResponse) SetApplicationset(v V1alpha1ApplicationSet) {
	o.Applicationset = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *ApplicationsetApplicationSetResponse) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationsetApplicationSetResponse) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *ApplicationsetApplicationSetResponse) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *ApplicationsetApplicationSetResponse) SetProject(v string) {
	o.Project = &v
}

func (o ApplicationsetApplicationSetResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Applicationset != nil {
		toSerialize["applicationset"] = o.Applicationset
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationsetApplicationSetResponse struct {
	value *ApplicationsetApplicationSetResponse
	isSet bool
}

func (v NullableApplicationsetApplicationSetResponse) Get() *ApplicationsetApplicationSetResponse {
	return v.value
}

func (v *NullableApplicationsetApplicationSetResponse) Set(val *ApplicationsetApplicationSetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationsetApplicationSetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationsetApplicationSetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationsetApplicationSetResponse(val *ApplicationsetApplicationSetResponse) *NullableApplicationsetApplicationSetResponse {
	return &NullableApplicationsetApplicationSetResponse{value: val, isSet: true}
}

func (v NullableApplicationsetApplicationSetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationsetApplicationSetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
