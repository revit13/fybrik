/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// RepositoryRepoAppDetailsQuery struct for RepositoryRepoAppDetailsQuery
type RepositoryRepoAppDetailsQuery struct {
	AppName    *string                    `json:"appName,omitempty"`
	AppProject *string                    `json:"appProject,omitempty"`
	Source     *V1alpha1ApplicationSource `json:"source,omitempty"`
}

// NewRepositoryRepoAppDetailsQuery instantiates a new RepositoryRepoAppDetailsQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryRepoAppDetailsQuery() *RepositoryRepoAppDetailsQuery {
	this := RepositoryRepoAppDetailsQuery{}
	return &this
}

// NewRepositoryRepoAppDetailsQueryWithDefaults instantiates a new RepositoryRepoAppDetailsQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryRepoAppDetailsQueryWithDefaults() *RepositoryRepoAppDetailsQuery {
	this := RepositoryRepoAppDetailsQuery{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsQuery) GetAppName() string {
	if o == nil || o.AppName == nil {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsQuery) GetAppNameOk() (*string, bool) {
	if o == nil || o.AppName == nil {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsQuery) HasAppName() bool {
	if o != nil && o.AppName != nil {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *RepositoryRepoAppDetailsQuery) SetAppName(v string) {
	o.AppName = &v
}

// GetAppProject returns the AppProject field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsQuery) GetAppProject() string {
	if o == nil || o.AppProject == nil {
		var ret string
		return ret
	}
	return *o.AppProject
}

// GetAppProjectOk returns a tuple with the AppProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsQuery) GetAppProjectOk() (*string, bool) {
	if o == nil || o.AppProject == nil {
		return nil, false
	}
	return o.AppProject, true
}

// HasAppProject returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsQuery) HasAppProject() bool {
	if o != nil && o.AppProject != nil {
		return true
	}

	return false
}

// SetAppProject gets a reference to the given string and assigns it to the AppProject field.
func (o *RepositoryRepoAppDetailsQuery) SetAppProject(v string) {
	o.AppProject = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsQuery) GetSource() V1alpha1ApplicationSource {
	if o == nil || o.Source == nil {
		var ret V1alpha1ApplicationSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsQuery) GetSourceOk() (*V1alpha1ApplicationSource, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsQuery) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given V1alpha1ApplicationSource and assigns it to the Source field.
func (o *RepositoryRepoAppDetailsQuery) SetSource(v V1alpha1ApplicationSource) {
	o.Source = &v
}

func (o RepositoryRepoAppDetailsQuery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppName != nil {
		toSerialize["appName"] = o.AppName
	}
	if o.AppProject != nil {
		toSerialize["appProject"] = o.AppProject
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryRepoAppDetailsQuery struct {
	value *RepositoryRepoAppDetailsQuery
	isSet bool
}

func (v NullableRepositoryRepoAppDetailsQuery) Get() *RepositoryRepoAppDetailsQuery {
	return v.value
}

func (v *NullableRepositoryRepoAppDetailsQuery) Set(val *RepositoryRepoAppDetailsQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryRepoAppDetailsQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryRepoAppDetailsQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryRepoAppDetailsQuery(val *RepositoryRepoAppDetailsQuery) *NullableRepositoryRepoAppDetailsQuery {
	return &NullableRepositoryRepoAppDetailsQuery{value: val, isSet: true}
}

func (v NullableRepositoryRepoAppDetailsQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryRepoAppDetailsQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
