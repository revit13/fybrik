/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// RepositoryManifestResponse struct for RepositoryManifestResponse
type RepositoryManifestResponse struct {
	Manifests *[]string `json:"manifests,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Revision *string `json:"revision,omitempty"`
	Server *string `json:"server,omitempty"`
	SourceType *string `json:"sourceType,omitempty"`
	VerifyResult *string `json:"verifyResult,omitempty"`
}

// NewRepositoryManifestResponse instantiates a new RepositoryManifestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryManifestResponse() *RepositoryManifestResponse {
	this := RepositoryManifestResponse{}
	return &this
}

// NewRepositoryManifestResponseWithDefaults instantiates a new RepositoryManifestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryManifestResponseWithDefaults() *RepositoryManifestResponse {
	this := RepositoryManifestResponse{}
	return &this
}

// GetManifests returns the Manifests field value if set, zero value otherwise.
func (o *RepositoryManifestResponse) GetManifests() []string {
	if o == nil || o.Manifests == nil {
		var ret []string
		return ret
	}
	return *o.Manifests
}

// GetManifestsOk returns a tuple with the Manifests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryManifestResponse) GetManifestsOk() (*[]string, bool) {
	if o == nil || o.Manifests == nil {
		return nil, false
	}
	return o.Manifests, true
}

// HasManifests returns a boolean if a field has been set.
func (o *RepositoryManifestResponse) HasManifests() bool {
	if o != nil && o.Manifests != nil {
		return true
	}

	return false
}

// SetManifests gets a reference to the given []string and assigns it to the Manifests field.
func (o *RepositoryManifestResponse) SetManifests(v []string) {
	o.Manifests = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *RepositoryManifestResponse) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryManifestResponse) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *RepositoryManifestResponse) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *RepositoryManifestResponse) SetNamespace(v string) {
	o.Namespace = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *RepositoryManifestResponse) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryManifestResponse) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *RepositoryManifestResponse) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *RepositoryManifestResponse) SetRevision(v string) {
	o.Revision = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *RepositoryManifestResponse) GetServer() string {
	if o == nil || o.Server == nil {
		var ret string
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryManifestResponse) GetServerOk() (*string, bool) {
	if o == nil || o.Server == nil {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *RepositoryManifestResponse) HasServer() bool {
	if o != nil && o.Server != nil {
		return true
	}

	return false
}

// SetServer gets a reference to the given string and assigns it to the Server field.
func (o *RepositoryManifestResponse) SetServer(v string) {
	o.Server = &v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise.
func (o *RepositoryManifestResponse) GetSourceType() string {
	if o == nil || o.SourceType == nil {
		var ret string
		return ret
	}
	return *o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryManifestResponse) GetSourceTypeOk() (*string, bool) {
	if o == nil || o.SourceType == nil {
		return nil, false
	}
	return o.SourceType, true
}

// HasSourceType returns a boolean if a field has been set.
func (o *RepositoryManifestResponse) HasSourceType() bool {
	if o != nil && o.SourceType != nil {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given string and assigns it to the SourceType field.
func (o *RepositoryManifestResponse) SetSourceType(v string) {
	o.SourceType = &v
}

// GetVerifyResult returns the VerifyResult field value if set, zero value otherwise.
func (o *RepositoryManifestResponse) GetVerifyResult() string {
	if o == nil || o.VerifyResult == nil {
		var ret string
		return ret
	}
	return *o.VerifyResult
}

// GetVerifyResultOk returns a tuple with the VerifyResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryManifestResponse) GetVerifyResultOk() (*string, bool) {
	if o == nil || o.VerifyResult == nil {
		return nil, false
	}
	return o.VerifyResult, true
}

// HasVerifyResult returns a boolean if a field has been set.
func (o *RepositoryManifestResponse) HasVerifyResult() bool {
	if o != nil && o.VerifyResult != nil {
		return true
	}

	return false
}

// SetVerifyResult gets a reference to the given string and assigns it to the VerifyResult field.
func (o *RepositoryManifestResponse) SetVerifyResult(v string) {
	o.VerifyResult = &v
}

func (o RepositoryManifestResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Manifests != nil {
		toSerialize["manifests"] = o.Manifests
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.Server != nil {
		toSerialize["server"] = o.Server
	}
	if o.SourceType != nil {
		toSerialize["sourceType"] = o.SourceType
	}
	if o.VerifyResult != nil {
		toSerialize["verifyResult"] = o.VerifyResult
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryManifestResponse struct {
	value *RepositoryManifestResponse
	isSet bool
}

func (v NullableRepositoryManifestResponse) Get() *RepositoryManifestResponse {
	return v.value
}

func (v *NullableRepositoryManifestResponse) Set(val *RepositoryManifestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryManifestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryManifestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryManifestResponse(val *RepositoryManifestResponse) *NullableRepositoryManifestResponse {
	return &NullableRepositoryManifestResponse{value: val, isSet: true}
}

func (v NullableRepositoryManifestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryManifestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


