/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1KustomizeReplica struct for V1alpha1KustomizeReplica
type V1alpha1KustomizeReplica struct {
	Count *IntstrIntOrString `json:"count,omitempty"`
	Name  *string            `json:"name,omitempty"`
}

// NewV1alpha1KustomizeReplica instantiates a new V1alpha1KustomizeReplica object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1KustomizeReplica() *V1alpha1KustomizeReplica {
	this := V1alpha1KustomizeReplica{}
	return &this
}

// NewV1alpha1KustomizeReplicaWithDefaults instantiates a new V1alpha1KustomizeReplica object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1KustomizeReplicaWithDefaults() *V1alpha1KustomizeReplica {
	this := V1alpha1KustomizeReplica{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *V1alpha1KustomizeReplica) GetCount() IntstrIntOrString {
	if o == nil || o.Count == nil {
		var ret IntstrIntOrString
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1KustomizeReplica) GetCountOk() (*IntstrIntOrString, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *V1alpha1KustomizeReplica) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given IntstrIntOrString and assigns it to the Count field.
func (o *V1alpha1KustomizeReplica) SetCount(v IntstrIntOrString) {
	o.Count = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1alpha1KustomizeReplica) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1KustomizeReplica) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1alpha1KustomizeReplica) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1alpha1KustomizeReplica) SetName(v string) {
	o.Name = &v
}

func (o V1alpha1KustomizeReplica) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1KustomizeReplica struct {
	value *V1alpha1KustomizeReplica
	isSet bool
}

func (v NullableV1alpha1KustomizeReplica) Get() *V1alpha1KustomizeReplica {
	return v.value
}

func (v *NullableV1alpha1KustomizeReplica) Set(val *V1alpha1KustomizeReplica) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1KustomizeReplica) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1KustomizeReplica) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1KustomizeReplica(val *V1alpha1KustomizeReplica) *NullableV1alpha1KustomizeReplica {
	return &NullableV1alpha1KustomizeReplica{value: val, isSet: true}
}

func (v NullableV1alpha1KustomizeReplica) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1KustomizeReplica) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
