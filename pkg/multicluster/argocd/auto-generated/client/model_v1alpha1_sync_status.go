/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1SyncStatus struct for V1alpha1SyncStatus
type V1alpha1SyncStatus struct {
	ComparedTo *V1alpha1ComparedTo `json:"comparedTo,omitempty"`
	Revision   *string             `json:"revision,omitempty"`
	Revisions  *[]string           `json:"revisions,omitempty"`
	Status     *string             `json:"status,omitempty"`
}

// NewV1alpha1SyncStatus instantiates a new V1alpha1SyncStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1SyncStatus() *V1alpha1SyncStatus {
	this := V1alpha1SyncStatus{}
	return &this
}

// NewV1alpha1SyncStatusWithDefaults instantiates a new V1alpha1SyncStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1SyncStatusWithDefaults() *V1alpha1SyncStatus {
	this := V1alpha1SyncStatus{}
	return &this
}

// GetComparedTo returns the ComparedTo field value if set, zero value otherwise.
func (o *V1alpha1SyncStatus) GetComparedTo() V1alpha1ComparedTo {
	if o == nil || o.ComparedTo == nil {
		var ret V1alpha1ComparedTo
		return ret
	}
	return *o.ComparedTo
}

// GetComparedToOk returns a tuple with the ComparedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncStatus) GetComparedToOk() (*V1alpha1ComparedTo, bool) {
	if o == nil || o.ComparedTo == nil {
		return nil, false
	}
	return o.ComparedTo, true
}

// HasComparedTo returns a boolean if a field has been set.
func (o *V1alpha1SyncStatus) HasComparedTo() bool {
	if o != nil && o.ComparedTo != nil {
		return true
	}

	return false
}

// SetComparedTo gets a reference to the given V1alpha1ComparedTo and assigns it to the ComparedTo field.
func (o *V1alpha1SyncStatus) SetComparedTo(v V1alpha1ComparedTo) {
	o.ComparedTo = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V1alpha1SyncStatus) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncStatus) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V1alpha1SyncStatus) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *V1alpha1SyncStatus) SetRevision(v string) {
	o.Revision = &v
}

// GetRevisions returns the Revisions field value if set, zero value otherwise.
func (o *V1alpha1SyncStatus) GetRevisions() []string {
	if o == nil || o.Revisions == nil {
		var ret []string
		return ret
	}
	return *o.Revisions
}

// GetRevisionsOk returns a tuple with the Revisions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncStatus) GetRevisionsOk() (*[]string, bool) {
	if o == nil || o.Revisions == nil {
		return nil, false
	}
	return o.Revisions, true
}

// HasRevisions returns a boolean if a field has been set.
func (o *V1alpha1SyncStatus) HasRevisions() bool {
	if o != nil && o.Revisions != nil {
		return true
	}

	return false
}

// SetRevisions gets a reference to the given []string and assigns it to the Revisions field.
func (o *V1alpha1SyncStatus) SetRevisions(v []string) {
	o.Revisions = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1alpha1SyncStatus) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncStatus) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1alpha1SyncStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *V1alpha1SyncStatus) SetStatus(v string) {
	o.Status = &v
}

func (o V1alpha1SyncStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ComparedTo != nil {
		toSerialize["comparedTo"] = o.ComparedTo
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.Revisions != nil {
		toSerialize["revisions"] = o.Revisions
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1SyncStatus struct {
	value *V1alpha1SyncStatus
	isSet bool
}

func (v NullableV1alpha1SyncStatus) Get() *V1alpha1SyncStatus {
	return v.value
}

func (v *NullableV1alpha1SyncStatus) Set(val *V1alpha1SyncStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1SyncStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1SyncStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1SyncStatus(val *V1alpha1SyncStatus) *NullableV1alpha1SyncStatus {
	return &NullableV1alpha1SyncStatus{value: val, isSet: true}
}

func (v NullableV1alpha1SyncStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1SyncStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
