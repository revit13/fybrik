/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1ApplicationSetTemplateMeta struct for V1alpha1ApplicationSetTemplateMeta
type V1alpha1ApplicationSetTemplateMeta struct {
	Annotations *map[string]string `json:"annotations,omitempty"`
	Finalizers *[]string `json:"finalizers,omitempty"`
	Labels *map[string]string `json:"labels,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
}

// NewV1alpha1ApplicationSetTemplateMeta instantiates a new V1alpha1ApplicationSetTemplateMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ApplicationSetTemplateMeta() *V1alpha1ApplicationSetTemplateMeta {
	this := V1alpha1ApplicationSetTemplateMeta{}
	return &this
}

// NewV1alpha1ApplicationSetTemplateMetaWithDefaults instantiates a new V1alpha1ApplicationSetTemplateMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ApplicationSetTemplateMetaWithDefaults() *V1alpha1ApplicationSetTemplateMeta {
	this := V1alpha1ApplicationSetTemplateMeta{}
	return &this
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSetTemplateMeta) GetAnnotations() map[string]string {
	if o == nil || o.Annotations == nil {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || o.Annotations == nil {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) HasAnnotations() bool {
	if o != nil && o.Annotations != nil {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *V1alpha1ApplicationSetTemplateMeta) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetFinalizers returns the Finalizers field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSetTemplateMeta) GetFinalizers() []string {
	if o == nil || o.Finalizers == nil {
		var ret []string
		return ret
	}
	return *o.Finalizers
}

// GetFinalizersOk returns a tuple with the Finalizers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) GetFinalizersOk() (*[]string, bool) {
	if o == nil || o.Finalizers == nil {
		return nil, false
	}
	return o.Finalizers, true
}

// HasFinalizers returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) HasFinalizers() bool {
	if o != nil && o.Finalizers != nil {
		return true
	}

	return false
}

// SetFinalizers gets a reference to the given []string and assigns it to the Finalizers field.
func (o *V1alpha1ApplicationSetTemplateMeta) SetFinalizers(v []string) {
	o.Finalizers = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSetTemplateMeta) GetLabels() map[string]string {
	if o == nil || o.Labels == nil {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *V1alpha1ApplicationSetTemplateMeta) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSetTemplateMeta) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1alpha1ApplicationSetTemplateMeta) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1alpha1ApplicationSetTemplateMeta) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1alpha1ApplicationSetTemplateMeta) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1alpha1ApplicationSetTemplateMeta) SetNamespace(v string) {
	o.Namespace = &v
}

func (o V1alpha1ApplicationSetTemplateMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	if o.Finalizers != nil {
		toSerialize["finalizers"] = o.Finalizers
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1ApplicationSetTemplateMeta struct {
	value *V1alpha1ApplicationSetTemplateMeta
	isSet bool
}

func (v NullableV1alpha1ApplicationSetTemplateMeta) Get() *V1alpha1ApplicationSetTemplateMeta {
	return v.value
}

func (v *NullableV1alpha1ApplicationSetTemplateMeta) Set(val *V1alpha1ApplicationSetTemplateMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ApplicationSetTemplateMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ApplicationSetTemplateMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ApplicationSetTemplateMeta(val *V1alpha1ApplicationSetTemplateMeta) *NullableV1alpha1ApplicationSetTemplateMeta {
	return &NullableV1alpha1ApplicationSetTemplateMeta{value: val, isSet: true}
}

func (v NullableV1alpha1ApplicationSetTemplateMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ApplicationSetTemplateMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


