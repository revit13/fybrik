/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// RepositoryRepoAppDetailsResponse struct for RepositoryRepoAppDetailsResponse
type RepositoryRepoAppDetailsResponse struct {
	Directory *map[string]interface{}     `json:"directory,omitempty"`
	Helm      *RepositoryHelmAppSpec      `json:"helm,omitempty"`
	Kustomize *RepositoryKustomizeAppSpec `json:"kustomize,omitempty"`
	Plugin    *RepositoryPluginAppSpec    `json:"plugin,omitempty"`
	Type      *string                     `json:"type,omitempty"`
}

// NewRepositoryRepoAppDetailsResponse instantiates a new RepositoryRepoAppDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryRepoAppDetailsResponse() *RepositoryRepoAppDetailsResponse {
	this := RepositoryRepoAppDetailsResponse{}
	return &this
}

// NewRepositoryRepoAppDetailsResponseWithDefaults instantiates a new RepositoryRepoAppDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryRepoAppDetailsResponseWithDefaults() *RepositoryRepoAppDetailsResponse {
	this := RepositoryRepoAppDetailsResponse{}
	return &this
}

// GetDirectory returns the Directory field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsResponse) GetDirectory() map[string]interface{} {
	if o == nil || o.Directory == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Directory
}

// GetDirectoryOk returns a tuple with the Directory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsResponse) GetDirectoryOk() (*map[string]interface{}, bool) {
	if o == nil || o.Directory == nil {
		return nil, false
	}
	return o.Directory, true
}

// HasDirectory returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsResponse) HasDirectory() bool {
	if o != nil && o.Directory != nil {
		return true
	}

	return false
}

// SetDirectory gets a reference to the given map[string]interface{} and assigns it to the Directory field.
func (o *RepositoryRepoAppDetailsResponse) SetDirectory(v map[string]interface{}) {
	o.Directory = &v
}

// GetHelm returns the Helm field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsResponse) GetHelm() RepositoryHelmAppSpec {
	if o == nil || o.Helm == nil {
		var ret RepositoryHelmAppSpec
		return ret
	}
	return *o.Helm
}

// GetHelmOk returns a tuple with the Helm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsResponse) GetHelmOk() (*RepositoryHelmAppSpec, bool) {
	if o == nil || o.Helm == nil {
		return nil, false
	}
	return o.Helm, true
}

// HasHelm returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsResponse) HasHelm() bool {
	if o != nil && o.Helm != nil {
		return true
	}

	return false
}

// SetHelm gets a reference to the given RepositoryHelmAppSpec and assigns it to the Helm field.
func (o *RepositoryRepoAppDetailsResponse) SetHelm(v RepositoryHelmAppSpec) {
	o.Helm = &v
}

// GetKustomize returns the Kustomize field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsResponse) GetKustomize() RepositoryKustomizeAppSpec {
	if o == nil || o.Kustomize == nil {
		var ret RepositoryKustomizeAppSpec
		return ret
	}
	return *o.Kustomize
}

// GetKustomizeOk returns a tuple with the Kustomize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsResponse) GetKustomizeOk() (*RepositoryKustomizeAppSpec, bool) {
	if o == nil || o.Kustomize == nil {
		return nil, false
	}
	return o.Kustomize, true
}

// HasKustomize returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsResponse) HasKustomize() bool {
	if o != nil && o.Kustomize != nil {
		return true
	}

	return false
}

// SetKustomize gets a reference to the given RepositoryKustomizeAppSpec and assigns it to the Kustomize field.
func (o *RepositoryRepoAppDetailsResponse) SetKustomize(v RepositoryKustomizeAppSpec) {
	o.Kustomize = &v
}

// GetPlugin returns the Plugin field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsResponse) GetPlugin() RepositoryPluginAppSpec {
	if o == nil || o.Plugin == nil {
		var ret RepositoryPluginAppSpec
		return ret
	}
	return *o.Plugin
}

// GetPluginOk returns a tuple with the Plugin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsResponse) GetPluginOk() (*RepositoryPluginAppSpec, bool) {
	if o == nil || o.Plugin == nil {
		return nil, false
	}
	return o.Plugin, true
}

// HasPlugin returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsResponse) HasPlugin() bool {
	if o != nil && o.Plugin != nil {
		return true
	}

	return false
}

// SetPlugin gets a reference to the given RepositoryPluginAppSpec and assigns it to the Plugin field.
func (o *RepositoryRepoAppDetailsResponse) SetPlugin(v RepositoryPluginAppSpec) {
	o.Plugin = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RepositoryRepoAppDetailsResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryRepoAppDetailsResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RepositoryRepoAppDetailsResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RepositoryRepoAppDetailsResponse) SetType(v string) {
	o.Type = &v
}

func (o RepositoryRepoAppDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Directory != nil {
		toSerialize["directory"] = o.Directory
	}
	if o.Helm != nil {
		toSerialize["helm"] = o.Helm
	}
	if o.Kustomize != nil {
		toSerialize["kustomize"] = o.Kustomize
	}
	if o.Plugin != nil {
		toSerialize["plugin"] = o.Plugin
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryRepoAppDetailsResponse struct {
	value *RepositoryRepoAppDetailsResponse
	isSet bool
}

func (v NullableRepositoryRepoAppDetailsResponse) Get() *RepositoryRepoAppDetailsResponse {
	return v.value
}

func (v *NullableRepositoryRepoAppDetailsResponse) Set(val *RepositoryRepoAppDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryRepoAppDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryRepoAppDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryRepoAppDetailsResponse(val *RepositoryRepoAppDetailsResponse) *NullableRepositoryRepoAppDetailsResponse {
	return &NullableRepositoryRepoAppDetailsResponse{value: val, isSet: true}
}

func (v NullableRepositoryRepoAppDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryRepoAppDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
