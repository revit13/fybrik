/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1OverrideIgnoreDiff struct for V1alpha1OverrideIgnoreDiff
type V1alpha1OverrideIgnoreDiff struct {
	JSONPointers          *[]string `json:"jSONPointers,omitempty"`
	JqPathExpressions     *[]string `json:"jqPathExpressions,omitempty"`
	ManagedFieldsManagers *[]string `json:"managedFieldsManagers,omitempty"`
}

// NewV1alpha1OverrideIgnoreDiff instantiates a new V1alpha1OverrideIgnoreDiff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1OverrideIgnoreDiff() *V1alpha1OverrideIgnoreDiff {
	this := V1alpha1OverrideIgnoreDiff{}
	return &this
}

// NewV1alpha1OverrideIgnoreDiffWithDefaults instantiates a new V1alpha1OverrideIgnoreDiff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1OverrideIgnoreDiffWithDefaults() *V1alpha1OverrideIgnoreDiff {
	this := V1alpha1OverrideIgnoreDiff{}
	return &this
}

// GetJSONPointers returns the JSONPointers field value if set, zero value otherwise.
func (o *V1alpha1OverrideIgnoreDiff) GetJSONPointers() []string {
	if o == nil || o.JSONPointers == nil {
		var ret []string
		return ret
	}
	return *o.JSONPointers
}

// GetJSONPointersOk returns a tuple with the JSONPointers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OverrideIgnoreDiff) GetJSONPointersOk() (*[]string, bool) {
	if o == nil || o.JSONPointers == nil {
		return nil, false
	}
	return o.JSONPointers, true
}

// HasJSONPointers returns a boolean if a field has been set.
func (o *V1alpha1OverrideIgnoreDiff) HasJSONPointers() bool {
	if o != nil && o.JSONPointers != nil {
		return true
	}

	return false
}

// SetJSONPointers gets a reference to the given []string and assigns it to the JSONPointers field.
func (o *V1alpha1OverrideIgnoreDiff) SetJSONPointers(v []string) {
	o.JSONPointers = &v
}

// GetJqPathExpressions returns the JqPathExpressions field value if set, zero value otherwise.
func (o *V1alpha1OverrideIgnoreDiff) GetJqPathExpressions() []string {
	if o == nil || o.JqPathExpressions == nil {
		var ret []string
		return ret
	}
	return *o.JqPathExpressions
}

// GetJqPathExpressionsOk returns a tuple with the JqPathExpressions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OverrideIgnoreDiff) GetJqPathExpressionsOk() (*[]string, bool) {
	if o == nil || o.JqPathExpressions == nil {
		return nil, false
	}
	return o.JqPathExpressions, true
}

// HasJqPathExpressions returns a boolean if a field has been set.
func (o *V1alpha1OverrideIgnoreDiff) HasJqPathExpressions() bool {
	if o != nil && o.JqPathExpressions != nil {
		return true
	}

	return false
}

// SetJqPathExpressions gets a reference to the given []string and assigns it to the JqPathExpressions field.
func (o *V1alpha1OverrideIgnoreDiff) SetJqPathExpressions(v []string) {
	o.JqPathExpressions = &v
}

// GetManagedFieldsManagers returns the ManagedFieldsManagers field value if set, zero value otherwise.
func (o *V1alpha1OverrideIgnoreDiff) GetManagedFieldsManagers() []string {
	if o == nil || o.ManagedFieldsManagers == nil {
		var ret []string
		return ret
	}
	return *o.ManagedFieldsManagers
}

// GetManagedFieldsManagersOk returns a tuple with the ManagedFieldsManagers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OverrideIgnoreDiff) GetManagedFieldsManagersOk() (*[]string, bool) {
	if o == nil || o.ManagedFieldsManagers == nil {
		return nil, false
	}
	return o.ManagedFieldsManagers, true
}

// HasManagedFieldsManagers returns a boolean if a field has been set.
func (o *V1alpha1OverrideIgnoreDiff) HasManagedFieldsManagers() bool {
	if o != nil && o.ManagedFieldsManagers != nil {
		return true
	}

	return false
}

// SetManagedFieldsManagers gets a reference to the given []string and assigns it to the ManagedFieldsManagers field.
func (o *V1alpha1OverrideIgnoreDiff) SetManagedFieldsManagers(v []string) {
	o.ManagedFieldsManagers = &v
}

func (o V1alpha1OverrideIgnoreDiff) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JSONPointers != nil {
		toSerialize["jSONPointers"] = o.JSONPointers
	}
	if o.JqPathExpressions != nil {
		toSerialize["jqPathExpressions"] = o.JqPathExpressions
	}
	if o.ManagedFieldsManagers != nil {
		toSerialize["managedFieldsManagers"] = o.ManagedFieldsManagers
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1OverrideIgnoreDiff struct {
	value *V1alpha1OverrideIgnoreDiff
	isSet bool
}

func (v NullableV1alpha1OverrideIgnoreDiff) Get() *V1alpha1OverrideIgnoreDiff {
	return v.value
}

func (v *NullableV1alpha1OverrideIgnoreDiff) Set(val *V1alpha1OverrideIgnoreDiff) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1OverrideIgnoreDiff) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1OverrideIgnoreDiff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1OverrideIgnoreDiff(val *V1alpha1OverrideIgnoreDiff) *NullableV1alpha1OverrideIgnoreDiff {
	return &NullableV1alpha1OverrideIgnoreDiff{value: val, isSet: true}
}

func (v NullableV1alpha1OverrideIgnoreDiff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1OverrideIgnoreDiff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
