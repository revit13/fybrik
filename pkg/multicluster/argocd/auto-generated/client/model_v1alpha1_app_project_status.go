/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1AppProjectStatus struct for V1alpha1AppProjectStatus
type V1alpha1AppProjectStatus struct {
	JwtTokensByRole *map[string]V1alpha1JWTTokens `json:"jwtTokensByRole,omitempty"`
}

// NewV1alpha1AppProjectStatus instantiates a new V1alpha1AppProjectStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1AppProjectStatus() *V1alpha1AppProjectStatus {
	this := V1alpha1AppProjectStatus{}
	return &this
}

// NewV1alpha1AppProjectStatusWithDefaults instantiates a new V1alpha1AppProjectStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1AppProjectStatusWithDefaults() *V1alpha1AppProjectStatus {
	this := V1alpha1AppProjectStatus{}
	return &this
}

// GetJwtTokensByRole returns the JwtTokensByRole field value if set, zero value otherwise.
func (o *V1alpha1AppProjectStatus) GetJwtTokensByRole() map[string]V1alpha1JWTTokens {
	if o == nil || o.JwtTokensByRole == nil {
		var ret map[string]V1alpha1JWTTokens
		return ret
	}
	return *o.JwtTokensByRole
}

// GetJwtTokensByRoleOk returns a tuple with the JwtTokensByRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1AppProjectStatus) GetJwtTokensByRoleOk() (*map[string]V1alpha1JWTTokens, bool) {
	if o == nil || o.JwtTokensByRole == nil {
		return nil, false
	}
	return o.JwtTokensByRole, true
}

// HasJwtTokensByRole returns a boolean if a field has been set.
func (o *V1alpha1AppProjectStatus) HasJwtTokensByRole() bool {
	if o != nil && o.JwtTokensByRole != nil {
		return true
	}

	return false
}

// SetJwtTokensByRole gets a reference to the given map[string]V1alpha1JWTTokens and assigns it to the JwtTokensByRole field.
func (o *V1alpha1AppProjectStatus) SetJwtTokensByRole(v map[string]V1alpha1JWTTokens) {
	o.JwtTokensByRole = &v
}

func (o V1alpha1AppProjectStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JwtTokensByRole != nil {
		toSerialize["jwtTokensByRole"] = o.JwtTokensByRole
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1AppProjectStatus struct {
	value *V1alpha1AppProjectStatus
	isSet bool
}

func (v NullableV1alpha1AppProjectStatus) Get() *V1alpha1AppProjectStatus {
	return v.value
}

func (v *NullableV1alpha1AppProjectStatus) Set(val *V1alpha1AppProjectStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1AppProjectStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1AppProjectStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1AppProjectStatus(val *V1alpha1AppProjectStatus) *NullableV1alpha1AppProjectStatus {
	return &NullableV1alpha1AppProjectStatus{value: val, isSet: true}
}

func (v NullableV1alpha1AppProjectStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1AppProjectStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


