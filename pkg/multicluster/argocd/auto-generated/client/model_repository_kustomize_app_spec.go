/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// RepositoryKustomizeAppSpec struct for RepositoryKustomizeAppSpec
type RepositoryKustomizeAppSpec struct {
	// images is a list of available images.
	Images *[]string `json:"images,omitempty"`
}

// NewRepositoryKustomizeAppSpec instantiates a new RepositoryKustomizeAppSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryKustomizeAppSpec() *RepositoryKustomizeAppSpec {
	this := RepositoryKustomizeAppSpec{}
	return &this
}

// NewRepositoryKustomizeAppSpecWithDefaults instantiates a new RepositoryKustomizeAppSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryKustomizeAppSpecWithDefaults() *RepositoryKustomizeAppSpec {
	this := RepositoryKustomizeAppSpec{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *RepositoryKustomizeAppSpec) GetImages() []string {
	if o == nil || o.Images == nil {
		var ret []string
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryKustomizeAppSpec) GetImagesOk() (*[]string, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *RepositoryKustomizeAppSpec) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []string and assigns it to the Images field.
func (o *RepositoryKustomizeAppSpec) SetImages(v []string) {
	o.Images = &v
}

func (o RepositoryKustomizeAppSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryKustomizeAppSpec struct {
	value *RepositoryKustomizeAppSpec
	isSet bool
}

func (v NullableRepositoryKustomizeAppSpec) Get() *RepositoryKustomizeAppSpec {
	return v.value
}

func (v *NullableRepositoryKustomizeAppSpec) Set(val *RepositoryKustomizeAppSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryKustomizeAppSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryKustomizeAppSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryKustomizeAppSpec(val *RepositoryKustomizeAppSpec) *NullableRepositoryKustomizeAppSpec {
	return &NullableRepositoryKustomizeAppSpec{value: val, isSet: true}
}

func (v NullableRepositoryKustomizeAppSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryKustomizeAppSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
