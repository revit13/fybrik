/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1PullRequestGeneratorGithub PullRequestGenerator defines connection info specific to GitHub.
type V1alpha1PullRequestGeneratorGithub struct {
	// The GitHub API URL to talk to. If blank, use https://api.github.com/.
	Api *string `json:"api,omitempty"`
	// AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests.
	AppSecretName *string `json:"appSecretName,omitempty"`
	Labels *[]string `json:"labels,omitempty"`
	// GitHub org or user to scan. Required.
	Owner *string `json:"owner,omitempty"`
	// GitHub repo name to scan. Required.
	Repo *string `json:"repo,omitempty"`
	TokenRef *V1alpha1SecretRef `json:"tokenRef,omitempty"`
}

// NewV1alpha1PullRequestGeneratorGithub instantiates a new V1alpha1PullRequestGeneratorGithub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1PullRequestGeneratorGithub() *V1alpha1PullRequestGeneratorGithub {
	this := V1alpha1PullRequestGeneratorGithub{}
	return &this
}

// NewV1alpha1PullRequestGeneratorGithubWithDefaults instantiates a new V1alpha1PullRequestGeneratorGithub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1PullRequestGeneratorGithubWithDefaults() *V1alpha1PullRequestGeneratorGithub {
	this := V1alpha1PullRequestGeneratorGithub{}
	return &this
}

// GetApi returns the Api field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGeneratorGithub) GetApi() string {
	if o == nil || o.Api == nil {
		var ret string
		return ret
	}
	return *o.Api
}

// GetApiOk returns a tuple with the Api field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGeneratorGithub) GetApiOk() (*string, bool) {
	if o == nil || o.Api == nil {
		return nil, false
	}
	return o.Api, true
}

// HasApi returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGeneratorGithub) HasApi() bool {
	if o != nil && o.Api != nil {
		return true
	}

	return false
}

// SetApi gets a reference to the given string and assigns it to the Api field.
func (o *V1alpha1PullRequestGeneratorGithub) SetApi(v string) {
	o.Api = &v
}

// GetAppSecretName returns the AppSecretName field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGeneratorGithub) GetAppSecretName() string {
	if o == nil || o.AppSecretName == nil {
		var ret string
		return ret
	}
	return *o.AppSecretName
}

// GetAppSecretNameOk returns a tuple with the AppSecretName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGeneratorGithub) GetAppSecretNameOk() (*string, bool) {
	if o == nil || o.AppSecretName == nil {
		return nil, false
	}
	return o.AppSecretName, true
}

// HasAppSecretName returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGeneratorGithub) HasAppSecretName() bool {
	if o != nil && o.AppSecretName != nil {
		return true
	}

	return false
}

// SetAppSecretName gets a reference to the given string and assigns it to the AppSecretName field.
func (o *V1alpha1PullRequestGeneratorGithub) SetAppSecretName(v string) {
	o.AppSecretName = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGeneratorGithub) GetLabels() []string {
	if o == nil || o.Labels == nil {
		var ret []string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGeneratorGithub) GetLabelsOk() (*[]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGeneratorGithub) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *V1alpha1PullRequestGeneratorGithub) SetLabels(v []string) {
	o.Labels = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGeneratorGithub) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGeneratorGithub) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGeneratorGithub) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *V1alpha1PullRequestGeneratorGithub) SetOwner(v string) {
	o.Owner = &v
}

// GetRepo returns the Repo field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGeneratorGithub) GetRepo() string {
	if o == nil || o.Repo == nil {
		var ret string
		return ret
	}
	return *o.Repo
}

// GetRepoOk returns a tuple with the Repo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGeneratorGithub) GetRepoOk() (*string, bool) {
	if o == nil || o.Repo == nil {
		return nil, false
	}
	return o.Repo, true
}

// HasRepo returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGeneratorGithub) HasRepo() bool {
	if o != nil && o.Repo != nil {
		return true
	}

	return false
}

// SetRepo gets a reference to the given string and assigns it to the Repo field.
func (o *V1alpha1PullRequestGeneratorGithub) SetRepo(v string) {
	o.Repo = &v
}

// GetTokenRef returns the TokenRef field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGeneratorGithub) GetTokenRef() V1alpha1SecretRef {
	if o == nil || o.TokenRef == nil {
		var ret V1alpha1SecretRef
		return ret
	}
	return *o.TokenRef
}

// GetTokenRefOk returns a tuple with the TokenRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGeneratorGithub) GetTokenRefOk() (*V1alpha1SecretRef, bool) {
	if o == nil || o.TokenRef == nil {
		return nil, false
	}
	return o.TokenRef, true
}

// HasTokenRef returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGeneratorGithub) HasTokenRef() bool {
	if o != nil && o.TokenRef != nil {
		return true
	}

	return false
}

// SetTokenRef gets a reference to the given V1alpha1SecretRef and assigns it to the TokenRef field.
func (o *V1alpha1PullRequestGeneratorGithub) SetTokenRef(v V1alpha1SecretRef) {
	o.TokenRef = &v
}

func (o V1alpha1PullRequestGeneratorGithub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Api != nil {
		toSerialize["api"] = o.Api
	}
	if o.AppSecretName != nil {
		toSerialize["appSecretName"] = o.AppSecretName
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Repo != nil {
		toSerialize["repo"] = o.Repo
	}
	if o.TokenRef != nil {
		toSerialize["tokenRef"] = o.TokenRef
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1PullRequestGeneratorGithub struct {
	value *V1alpha1PullRequestGeneratorGithub
	isSet bool
}

func (v NullableV1alpha1PullRequestGeneratorGithub) Get() *V1alpha1PullRequestGeneratorGithub {
	return v.value
}

func (v *NullableV1alpha1PullRequestGeneratorGithub) Set(val *V1alpha1PullRequestGeneratorGithub) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1PullRequestGeneratorGithub) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1PullRequestGeneratorGithub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1PullRequestGeneratorGithub(val *V1alpha1PullRequestGeneratorGithub) *NullableV1alpha1PullRequestGeneratorGithub {
	return &NullableV1alpha1PullRequestGeneratorGithub{value: val, isSet: true}
}

func (v NullableV1alpha1PullRequestGeneratorGithub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1PullRequestGeneratorGithub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


