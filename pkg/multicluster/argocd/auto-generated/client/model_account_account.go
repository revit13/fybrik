/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// AccountAccount struct for AccountAccount
type AccountAccount struct {
	Capabilities *[]string       `json:"capabilities,omitempty"`
	Enabled      *bool           `json:"enabled,omitempty"`
	Name         *string         `json:"name,omitempty"`
	Tokens       *[]AccountToken `json:"tokens,omitempty"`
}

// NewAccountAccount instantiates a new AccountAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountAccount() *AccountAccount {
	this := AccountAccount{}
	return &this
}

// NewAccountAccountWithDefaults instantiates a new AccountAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountAccountWithDefaults() *AccountAccount {
	this := AccountAccount{}
	return &this
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *AccountAccount) GetCapabilities() []string {
	if o == nil || o.Capabilities == nil {
		var ret []string
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAccount) GetCapabilitiesOk() (*[]string, bool) {
	if o == nil || o.Capabilities == nil {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *AccountAccount) HasCapabilities() bool {
	if o != nil && o.Capabilities != nil {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given []string and assigns it to the Capabilities field.
func (o *AccountAccount) SetCapabilities(v []string) {
	o.Capabilities = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AccountAccount) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAccount) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AccountAccount) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AccountAccount) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccountAccount) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAccount) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccountAccount) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccountAccount) SetName(v string) {
	o.Name = &v
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *AccountAccount) GetTokens() []AccountToken {
	if o == nil || o.Tokens == nil {
		var ret []AccountToken
		return ret
	}
	return *o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountAccount) GetTokensOk() (*[]AccountToken, bool) {
	if o == nil || o.Tokens == nil {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *AccountAccount) HasTokens() bool {
	if o != nil && o.Tokens != nil {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []AccountToken and assigns it to the Tokens field.
func (o *AccountAccount) SetTokens(v []AccountToken) {
	o.Tokens = &v
}

func (o AccountAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Capabilities != nil {
		toSerialize["capabilities"] = o.Capabilities
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Tokens != nil {
		toSerialize["tokens"] = o.Tokens
	}
	return json.Marshal(toSerialize)
}

type NullableAccountAccount struct {
	value *AccountAccount
	isSet bool
}

func (v NullableAccountAccount) Get() *AccountAccount {
	return v.value
}

func (v *NullableAccountAccount) Set(val *AccountAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountAccount(val *AccountAccount) *NullableAccountAccount {
	return &NullableAccountAccount{value: val, isSet: true}
}

func (v NullableAccountAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
