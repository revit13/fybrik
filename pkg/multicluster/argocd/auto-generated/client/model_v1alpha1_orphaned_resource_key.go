/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1OrphanedResourceKey struct for V1alpha1OrphanedResourceKey
type V1alpha1OrphanedResourceKey struct {
	Group *string `json:"group,omitempty"`
	Kind *string `json:"kind,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewV1alpha1OrphanedResourceKey instantiates a new V1alpha1OrphanedResourceKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1OrphanedResourceKey() *V1alpha1OrphanedResourceKey {
	this := V1alpha1OrphanedResourceKey{}
	return &this
}

// NewV1alpha1OrphanedResourceKeyWithDefaults instantiates a new V1alpha1OrphanedResourceKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1OrphanedResourceKeyWithDefaults() *V1alpha1OrphanedResourceKey {
	this := V1alpha1OrphanedResourceKey{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *V1alpha1OrphanedResourceKey) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OrphanedResourceKey) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *V1alpha1OrphanedResourceKey) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *V1alpha1OrphanedResourceKey) SetGroup(v string) {
	o.Group = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *V1alpha1OrphanedResourceKey) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OrphanedResourceKey) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *V1alpha1OrphanedResourceKey) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *V1alpha1OrphanedResourceKey) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1alpha1OrphanedResourceKey) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OrphanedResourceKey) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1alpha1OrphanedResourceKey) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1alpha1OrphanedResourceKey) SetName(v string) {
	o.Name = &v
}

func (o V1alpha1OrphanedResourceKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1OrphanedResourceKey struct {
	value *V1alpha1OrphanedResourceKey
	isSet bool
}

func (v NullableV1alpha1OrphanedResourceKey) Get() *V1alpha1OrphanedResourceKey {
	return v.value
}

func (v *NullableV1alpha1OrphanedResourceKey) Set(val *V1alpha1OrphanedResourceKey) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1OrphanedResourceKey) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1OrphanedResourceKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1OrphanedResourceKey(val *V1alpha1OrphanedResourceKey) *NullableV1alpha1OrphanedResourceKey {
	return &NullableV1alpha1OrphanedResourceKey{value: val, isSet: true}
}

func (v NullableV1alpha1OrphanedResourceKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1OrphanedResourceKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


