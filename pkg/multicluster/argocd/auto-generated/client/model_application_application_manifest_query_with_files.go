/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// ApplicationApplicationManifestQueryWithFiles struct for ApplicationApplicationManifestQueryWithFiles
type ApplicationApplicationManifestQueryWithFiles struct {
	AppNamespace *string `json:"appNamespace,omitempty"`
	Checksum *string `json:"checksum,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewApplicationApplicationManifestQueryWithFiles instantiates a new ApplicationApplicationManifestQueryWithFiles object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationApplicationManifestQueryWithFiles() *ApplicationApplicationManifestQueryWithFiles {
	this := ApplicationApplicationManifestQueryWithFiles{}
	return &this
}

// NewApplicationApplicationManifestQueryWithFilesWithDefaults instantiates a new ApplicationApplicationManifestQueryWithFiles object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationApplicationManifestQueryWithFilesWithDefaults() *ApplicationApplicationManifestQueryWithFiles {
	this := ApplicationApplicationManifestQueryWithFiles{}
	return &this
}

// GetAppNamespace returns the AppNamespace field value if set, zero value otherwise.
func (o *ApplicationApplicationManifestQueryWithFiles) GetAppNamespace() string {
	if o == nil || o.AppNamespace == nil {
		var ret string
		return ret
	}
	return *o.AppNamespace
}

// GetAppNamespaceOk returns a tuple with the AppNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApplicationManifestQueryWithFiles) GetAppNamespaceOk() (*string, bool) {
	if o == nil || o.AppNamespace == nil {
		return nil, false
	}
	return o.AppNamespace, true
}

// HasAppNamespace returns a boolean if a field has been set.
func (o *ApplicationApplicationManifestQueryWithFiles) HasAppNamespace() bool {
	if o != nil && o.AppNamespace != nil {
		return true
	}

	return false
}

// SetAppNamespace gets a reference to the given string and assigns it to the AppNamespace field.
func (o *ApplicationApplicationManifestQueryWithFiles) SetAppNamespace(v string) {
	o.AppNamespace = &v
}

// GetChecksum returns the Checksum field value if set, zero value otherwise.
func (o *ApplicationApplicationManifestQueryWithFiles) GetChecksum() string {
	if o == nil || o.Checksum == nil {
		var ret string
		return ret
	}
	return *o.Checksum
}

// GetChecksumOk returns a tuple with the Checksum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApplicationManifestQueryWithFiles) GetChecksumOk() (*string, bool) {
	if o == nil || o.Checksum == nil {
		return nil, false
	}
	return o.Checksum, true
}

// HasChecksum returns a boolean if a field has been set.
func (o *ApplicationApplicationManifestQueryWithFiles) HasChecksum() bool {
	if o != nil && o.Checksum != nil {
		return true
	}

	return false
}

// SetChecksum gets a reference to the given string and assigns it to the Checksum field.
func (o *ApplicationApplicationManifestQueryWithFiles) SetChecksum(v string) {
	o.Checksum = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApplicationApplicationManifestQueryWithFiles) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationApplicationManifestQueryWithFiles) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApplicationApplicationManifestQueryWithFiles) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApplicationApplicationManifestQueryWithFiles) SetName(v string) {
	o.Name = &v
}

func (o ApplicationApplicationManifestQueryWithFiles) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppNamespace != nil {
		toSerialize["appNamespace"] = o.AppNamespace
	}
	if o.Checksum != nil {
		toSerialize["checksum"] = o.Checksum
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationApplicationManifestQueryWithFiles struct {
	value *ApplicationApplicationManifestQueryWithFiles
	isSet bool
}

func (v NullableApplicationApplicationManifestQueryWithFiles) Get() *ApplicationApplicationManifestQueryWithFiles {
	return v.value
}

func (v *NullableApplicationApplicationManifestQueryWithFiles) Set(val *ApplicationApplicationManifestQueryWithFiles) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationApplicationManifestQueryWithFiles) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationApplicationManifestQueryWithFiles) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationApplicationManifestQueryWithFiles(val *ApplicationApplicationManifestQueryWithFiles) *NullableApplicationApplicationManifestQueryWithFiles {
	return &NullableApplicationApplicationManifestQueryWithFiles{value: val, isSet: true}
}

func (v NullableApplicationApplicationManifestQueryWithFiles) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationApplicationManifestQueryWithFiles) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


