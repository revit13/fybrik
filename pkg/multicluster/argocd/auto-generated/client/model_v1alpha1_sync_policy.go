/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1SyncPolicy struct for V1alpha1SyncPolicy
type V1alpha1SyncPolicy struct {
	Automated *V1alpha1SyncPolicyAutomated `json:"automated,omitempty"`
	ManagedNamespaceMetadata *V1alpha1ManagedNamespaceMetadata `json:"managedNamespaceMetadata,omitempty"`
	Retry *V1alpha1RetryStrategy `json:"retry,omitempty"`
	SyncOptions *[]string `json:"syncOptions,omitempty"`
}

// NewV1alpha1SyncPolicy instantiates a new V1alpha1SyncPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1SyncPolicy() *V1alpha1SyncPolicy {
	this := V1alpha1SyncPolicy{}
	return &this
}

// NewV1alpha1SyncPolicyWithDefaults instantiates a new V1alpha1SyncPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1SyncPolicyWithDefaults() *V1alpha1SyncPolicy {
	this := V1alpha1SyncPolicy{}
	return &this
}

// GetAutomated returns the Automated field value if set, zero value otherwise.
func (o *V1alpha1SyncPolicy) GetAutomated() V1alpha1SyncPolicyAutomated {
	if o == nil || o.Automated == nil {
		var ret V1alpha1SyncPolicyAutomated
		return ret
	}
	return *o.Automated
}

// GetAutomatedOk returns a tuple with the Automated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncPolicy) GetAutomatedOk() (*V1alpha1SyncPolicyAutomated, bool) {
	if o == nil || o.Automated == nil {
		return nil, false
	}
	return o.Automated, true
}

// HasAutomated returns a boolean if a field has been set.
func (o *V1alpha1SyncPolicy) HasAutomated() bool {
	if o != nil && o.Automated != nil {
		return true
	}

	return false
}

// SetAutomated gets a reference to the given V1alpha1SyncPolicyAutomated and assigns it to the Automated field.
func (o *V1alpha1SyncPolicy) SetAutomated(v V1alpha1SyncPolicyAutomated) {
	o.Automated = &v
}

// GetManagedNamespaceMetadata returns the ManagedNamespaceMetadata field value if set, zero value otherwise.
func (o *V1alpha1SyncPolicy) GetManagedNamespaceMetadata() V1alpha1ManagedNamespaceMetadata {
	if o == nil || o.ManagedNamespaceMetadata == nil {
		var ret V1alpha1ManagedNamespaceMetadata
		return ret
	}
	return *o.ManagedNamespaceMetadata
}

// GetManagedNamespaceMetadataOk returns a tuple with the ManagedNamespaceMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncPolicy) GetManagedNamespaceMetadataOk() (*V1alpha1ManagedNamespaceMetadata, bool) {
	if o == nil || o.ManagedNamespaceMetadata == nil {
		return nil, false
	}
	return o.ManagedNamespaceMetadata, true
}

// HasManagedNamespaceMetadata returns a boolean if a field has been set.
func (o *V1alpha1SyncPolicy) HasManagedNamespaceMetadata() bool {
	if o != nil && o.ManagedNamespaceMetadata != nil {
		return true
	}

	return false
}

// SetManagedNamespaceMetadata gets a reference to the given V1alpha1ManagedNamespaceMetadata and assigns it to the ManagedNamespaceMetadata field.
func (o *V1alpha1SyncPolicy) SetManagedNamespaceMetadata(v V1alpha1ManagedNamespaceMetadata) {
	o.ManagedNamespaceMetadata = &v
}

// GetRetry returns the Retry field value if set, zero value otherwise.
func (o *V1alpha1SyncPolicy) GetRetry() V1alpha1RetryStrategy {
	if o == nil || o.Retry == nil {
		var ret V1alpha1RetryStrategy
		return ret
	}
	return *o.Retry
}

// GetRetryOk returns a tuple with the Retry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncPolicy) GetRetryOk() (*V1alpha1RetryStrategy, bool) {
	if o == nil || o.Retry == nil {
		return nil, false
	}
	return o.Retry, true
}

// HasRetry returns a boolean if a field has been set.
func (o *V1alpha1SyncPolicy) HasRetry() bool {
	if o != nil && o.Retry != nil {
		return true
	}

	return false
}

// SetRetry gets a reference to the given V1alpha1RetryStrategy and assigns it to the Retry field.
func (o *V1alpha1SyncPolicy) SetRetry(v V1alpha1RetryStrategy) {
	o.Retry = &v
}

// GetSyncOptions returns the SyncOptions field value if set, zero value otherwise.
func (o *V1alpha1SyncPolicy) GetSyncOptions() []string {
	if o == nil || o.SyncOptions == nil {
		var ret []string
		return ret
	}
	return *o.SyncOptions
}

// GetSyncOptionsOk returns a tuple with the SyncOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1SyncPolicy) GetSyncOptionsOk() (*[]string, bool) {
	if o == nil || o.SyncOptions == nil {
		return nil, false
	}
	return o.SyncOptions, true
}

// HasSyncOptions returns a boolean if a field has been set.
func (o *V1alpha1SyncPolicy) HasSyncOptions() bool {
	if o != nil && o.SyncOptions != nil {
		return true
	}

	return false
}

// SetSyncOptions gets a reference to the given []string and assigns it to the SyncOptions field.
func (o *V1alpha1SyncPolicy) SetSyncOptions(v []string) {
	o.SyncOptions = &v
}

func (o V1alpha1SyncPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Automated != nil {
		toSerialize["automated"] = o.Automated
	}
	if o.ManagedNamespaceMetadata != nil {
		toSerialize["managedNamespaceMetadata"] = o.ManagedNamespaceMetadata
	}
	if o.Retry != nil {
		toSerialize["retry"] = o.Retry
	}
	if o.SyncOptions != nil {
		toSerialize["syncOptions"] = o.SyncOptions
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1SyncPolicy struct {
	value *V1alpha1SyncPolicy
	isSet bool
}

func (v NullableV1alpha1SyncPolicy) Get() *V1alpha1SyncPolicy {
	return v.value
}

func (v *NullableV1alpha1SyncPolicy) Set(val *V1alpha1SyncPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1SyncPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1SyncPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1SyncPolicy(val *V1alpha1SyncPolicy) *NullableV1alpha1SyncPolicy {
	return &NullableV1alpha1SyncPolicy{value: val, isSet: true}
}

func (v NullableV1alpha1SyncPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1SyncPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


