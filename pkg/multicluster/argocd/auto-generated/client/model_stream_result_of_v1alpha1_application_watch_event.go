/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// StreamResultOfV1alpha1ApplicationWatchEvent struct for StreamResultOfV1alpha1ApplicationWatchEvent
type StreamResultOfV1alpha1ApplicationWatchEvent struct {
	Error *RuntimeStreamError `json:"error,omitempty"`
	Result *V1alpha1ApplicationWatchEvent `json:"result,omitempty"`
}

// NewStreamResultOfV1alpha1ApplicationWatchEvent instantiates a new StreamResultOfV1alpha1ApplicationWatchEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamResultOfV1alpha1ApplicationWatchEvent() *StreamResultOfV1alpha1ApplicationWatchEvent {
	this := StreamResultOfV1alpha1ApplicationWatchEvent{}
	return &this
}

// NewStreamResultOfV1alpha1ApplicationWatchEventWithDefaults instantiates a new StreamResultOfV1alpha1ApplicationWatchEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamResultOfV1alpha1ApplicationWatchEventWithDefaults() *StreamResultOfV1alpha1ApplicationWatchEvent {
	this := StreamResultOfV1alpha1ApplicationWatchEvent{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) GetError() RuntimeStreamError {
	if o == nil || o.Error == nil {
		var ret RuntimeStreamError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) GetErrorOk() (*RuntimeStreamError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given RuntimeStreamError and assigns it to the Error field.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) SetError(v RuntimeStreamError) {
	o.Error = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) GetResult() V1alpha1ApplicationWatchEvent {
	if o == nil || o.Result == nil {
		var ret V1alpha1ApplicationWatchEvent
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) GetResultOk() (*V1alpha1ApplicationWatchEvent, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given V1alpha1ApplicationWatchEvent and assigns it to the Result field.
func (o *StreamResultOfV1alpha1ApplicationWatchEvent) SetResult(v V1alpha1ApplicationWatchEvent) {
	o.Result = &v
}

func (o StreamResultOfV1alpha1ApplicationWatchEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullableStreamResultOfV1alpha1ApplicationWatchEvent struct {
	value *StreamResultOfV1alpha1ApplicationWatchEvent
	isSet bool
}

func (v NullableStreamResultOfV1alpha1ApplicationWatchEvent) Get() *StreamResultOfV1alpha1ApplicationWatchEvent {
	return v.value
}

func (v *NullableStreamResultOfV1alpha1ApplicationWatchEvent) Set(val *StreamResultOfV1alpha1ApplicationWatchEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamResultOfV1alpha1ApplicationWatchEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamResultOfV1alpha1ApplicationWatchEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamResultOfV1alpha1ApplicationWatchEvent(val *StreamResultOfV1alpha1ApplicationWatchEvent) *NullableStreamResultOfV1alpha1ApplicationWatchEvent {
	return &NullableStreamResultOfV1alpha1ApplicationWatchEvent{value: val, isSet: true}
}

func (v NullableStreamResultOfV1alpha1ApplicationWatchEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamResultOfV1alpha1ApplicationWatchEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


