/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1ResourceOverride struct for V1alpha1ResourceOverride
type V1alpha1ResourceOverride struct {
	Actions *string `json:"actions,omitempty"`
	HealthLua *string `json:"healthLua,omitempty"`
	IgnoreDifferences *V1alpha1OverrideIgnoreDiff `json:"ignoreDifferences,omitempty"`
	KnownTypeFields *[]V1alpha1KnownTypeField `json:"knownTypeFields,omitempty"`
	UseOpenLibs *bool `json:"useOpenLibs,omitempty"`
}

// NewV1alpha1ResourceOverride instantiates a new V1alpha1ResourceOverride object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1ResourceOverride() *V1alpha1ResourceOverride {
	this := V1alpha1ResourceOverride{}
	return &this
}

// NewV1alpha1ResourceOverrideWithDefaults instantiates a new V1alpha1ResourceOverride object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1ResourceOverrideWithDefaults() *V1alpha1ResourceOverride {
	this := V1alpha1ResourceOverride{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *V1alpha1ResourceOverride) GetActions() string {
	if o == nil || o.Actions == nil {
		var ret string
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceOverride) GetActionsOk() (*string, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *V1alpha1ResourceOverride) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given string and assigns it to the Actions field.
func (o *V1alpha1ResourceOverride) SetActions(v string) {
	o.Actions = &v
}

// GetHealthLua returns the HealthLua field value if set, zero value otherwise.
func (o *V1alpha1ResourceOverride) GetHealthLua() string {
	if o == nil || o.HealthLua == nil {
		var ret string
		return ret
	}
	return *o.HealthLua
}

// GetHealthLuaOk returns a tuple with the HealthLua field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceOverride) GetHealthLuaOk() (*string, bool) {
	if o == nil || o.HealthLua == nil {
		return nil, false
	}
	return o.HealthLua, true
}

// HasHealthLua returns a boolean if a field has been set.
func (o *V1alpha1ResourceOverride) HasHealthLua() bool {
	if o != nil && o.HealthLua != nil {
		return true
	}

	return false
}

// SetHealthLua gets a reference to the given string and assigns it to the HealthLua field.
func (o *V1alpha1ResourceOverride) SetHealthLua(v string) {
	o.HealthLua = &v
}

// GetIgnoreDifferences returns the IgnoreDifferences field value if set, zero value otherwise.
func (o *V1alpha1ResourceOverride) GetIgnoreDifferences() V1alpha1OverrideIgnoreDiff {
	if o == nil || o.IgnoreDifferences == nil {
		var ret V1alpha1OverrideIgnoreDiff
		return ret
	}
	return *o.IgnoreDifferences
}

// GetIgnoreDifferencesOk returns a tuple with the IgnoreDifferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceOverride) GetIgnoreDifferencesOk() (*V1alpha1OverrideIgnoreDiff, bool) {
	if o == nil || o.IgnoreDifferences == nil {
		return nil, false
	}
	return o.IgnoreDifferences, true
}

// HasIgnoreDifferences returns a boolean if a field has been set.
func (o *V1alpha1ResourceOverride) HasIgnoreDifferences() bool {
	if o != nil && o.IgnoreDifferences != nil {
		return true
	}

	return false
}

// SetIgnoreDifferences gets a reference to the given V1alpha1OverrideIgnoreDiff and assigns it to the IgnoreDifferences field.
func (o *V1alpha1ResourceOverride) SetIgnoreDifferences(v V1alpha1OverrideIgnoreDiff) {
	o.IgnoreDifferences = &v
}

// GetKnownTypeFields returns the KnownTypeFields field value if set, zero value otherwise.
func (o *V1alpha1ResourceOverride) GetKnownTypeFields() []V1alpha1KnownTypeField {
	if o == nil || o.KnownTypeFields == nil {
		var ret []V1alpha1KnownTypeField
		return ret
	}
	return *o.KnownTypeFields
}

// GetKnownTypeFieldsOk returns a tuple with the KnownTypeFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceOverride) GetKnownTypeFieldsOk() (*[]V1alpha1KnownTypeField, bool) {
	if o == nil || o.KnownTypeFields == nil {
		return nil, false
	}
	return o.KnownTypeFields, true
}

// HasKnownTypeFields returns a boolean if a field has been set.
func (o *V1alpha1ResourceOverride) HasKnownTypeFields() bool {
	if o != nil && o.KnownTypeFields != nil {
		return true
	}

	return false
}

// SetKnownTypeFields gets a reference to the given []V1alpha1KnownTypeField and assigns it to the KnownTypeFields field.
func (o *V1alpha1ResourceOverride) SetKnownTypeFields(v []V1alpha1KnownTypeField) {
	o.KnownTypeFields = &v
}

// GetUseOpenLibs returns the UseOpenLibs field value if set, zero value otherwise.
func (o *V1alpha1ResourceOverride) GetUseOpenLibs() bool {
	if o == nil || o.UseOpenLibs == nil {
		var ret bool
		return ret
	}
	return *o.UseOpenLibs
}

// GetUseOpenLibsOk returns a tuple with the UseOpenLibs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1ResourceOverride) GetUseOpenLibsOk() (*bool, bool) {
	if o == nil || o.UseOpenLibs == nil {
		return nil, false
	}
	return o.UseOpenLibs, true
}

// HasUseOpenLibs returns a boolean if a field has been set.
func (o *V1alpha1ResourceOverride) HasUseOpenLibs() bool {
	if o != nil && o.UseOpenLibs != nil {
		return true
	}

	return false
}

// SetUseOpenLibs gets a reference to the given bool and assigns it to the UseOpenLibs field.
func (o *V1alpha1ResourceOverride) SetUseOpenLibs(v bool) {
	o.UseOpenLibs = &v
}

func (o V1alpha1ResourceOverride) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.HealthLua != nil {
		toSerialize["healthLua"] = o.HealthLua
	}
	if o.IgnoreDifferences != nil {
		toSerialize["ignoreDifferences"] = o.IgnoreDifferences
	}
	if o.KnownTypeFields != nil {
		toSerialize["knownTypeFields"] = o.KnownTypeFields
	}
	if o.UseOpenLibs != nil {
		toSerialize["useOpenLibs"] = o.UseOpenLibs
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1ResourceOverride struct {
	value *V1alpha1ResourceOverride
	isSet bool
}

func (v NullableV1alpha1ResourceOverride) Get() *V1alpha1ResourceOverride {
	return v.value
}

func (v *NullableV1alpha1ResourceOverride) Set(val *V1alpha1ResourceOverride) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1ResourceOverride) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1ResourceOverride) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1ResourceOverride(val *V1alpha1ResourceOverride) *NullableV1alpha1ResourceOverride {
	return &NullableV1alpha1ResourceOverride{value: val, isSet: true}
}

func (v NullableV1alpha1ResourceOverride) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1ResourceOverride) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


