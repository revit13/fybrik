/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1KustomizeOptions struct for V1alpha1KustomizeOptions
type V1alpha1KustomizeOptions struct {
	BinaryPath   *string `json:"binaryPath,omitempty"`
	BuildOptions *string `json:"buildOptions,omitempty"`
}

// NewV1alpha1KustomizeOptions instantiates a new V1alpha1KustomizeOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1KustomizeOptions() *V1alpha1KustomizeOptions {
	this := V1alpha1KustomizeOptions{}
	return &this
}

// NewV1alpha1KustomizeOptionsWithDefaults instantiates a new V1alpha1KustomizeOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1KustomizeOptionsWithDefaults() *V1alpha1KustomizeOptions {
	this := V1alpha1KustomizeOptions{}
	return &this
}

// GetBinaryPath returns the BinaryPath field value if set, zero value otherwise.
func (o *V1alpha1KustomizeOptions) GetBinaryPath() string {
	if o == nil || o.BinaryPath == nil {
		var ret string
		return ret
	}
	return *o.BinaryPath
}

// GetBinaryPathOk returns a tuple with the BinaryPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1KustomizeOptions) GetBinaryPathOk() (*string, bool) {
	if o == nil || o.BinaryPath == nil {
		return nil, false
	}
	return o.BinaryPath, true
}

// HasBinaryPath returns a boolean if a field has been set.
func (o *V1alpha1KustomizeOptions) HasBinaryPath() bool {
	if o != nil && o.BinaryPath != nil {
		return true
	}

	return false
}

// SetBinaryPath gets a reference to the given string and assigns it to the BinaryPath field.
func (o *V1alpha1KustomizeOptions) SetBinaryPath(v string) {
	o.BinaryPath = &v
}

// GetBuildOptions returns the BuildOptions field value if set, zero value otherwise.
func (o *V1alpha1KustomizeOptions) GetBuildOptions() string {
	if o == nil || o.BuildOptions == nil {
		var ret string
		return ret
	}
	return *o.BuildOptions
}

// GetBuildOptionsOk returns a tuple with the BuildOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1KustomizeOptions) GetBuildOptionsOk() (*string, bool) {
	if o == nil || o.BuildOptions == nil {
		return nil, false
	}
	return o.BuildOptions, true
}

// HasBuildOptions returns a boolean if a field has been set.
func (o *V1alpha1KustomizeOptions) HasBuildOptions() bool {
	if o != nil && o.BuildOptions != nil {
		return true
	}

	return false
}

// SetBuildOptions gets a reference to the given string and assigns it to the BuildOptions field.
func (o *V1alpha1KustomizeOptions) SetBuildOptions(v string) {
	o.BuildOptions = &v
}

func (o V1alpha1KustomizeOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BinaryPath != nil {
		toSerialize["binaryPath"] = o.BinaryPath
	}
	if o.BuildOptions != nil {
		toSerialize["buildOptions"] = o.BuildOptions
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1KustomizeOptions struct {
	value *V1alpha1KustomizeOptions
	isSet bool
}

func (v NullableV1alpha1KustomizeOptions) Get() *V1alpha1KustomizeOptions {
	return v.value
}

func (v *NullableV1alpha1KustomizeOptions) Set(val *V1alpha1KustomizeOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1KustomizeOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1KustomizeOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1KustomizeOptions(val *V1alpha1KustomizeOptions) *NullableV1alpha1KustomizeOptions {
	return &NullableV1alpha1KustomizeOptions{value: val, isSet: true}
}

func (v NullableV1alpha1KustomizeOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1KustomizeOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
