/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1PullRequestGenerator PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests.
type V1alpha1PullRequestGenerator struct {
	BitbucketServer *V1alpha1PullRequestGeneratorBitbucketServer `json:"bitbucketServer,omitempty"`
	// Filters for which pull requests should be considered.
	Filters *[]V1alpha1PullRequestGeneratorFilter `json:"filters,omitempty"`
	Gitea   *V1alpha1PullRequestGeneratorGitea    `json:"gitea,omitempty"`
	Github  *V1alpha1PullRequestGeneratorGithub   `json:"github,omitempty"`
	Gitlab  *V1alpha1PullRequestGeneratorGitLab   `json:"gitlab,omitempty"`
	// Standard parameters.
	RequeueAfterSeconds *string                         `json:"requeueAfterSeconds,omitempty"`
	Template            *V1alpha1ApplicationSetTemplate `json:"template,omitempty"`
}

// NewV1alpha1PullRequestGenerator instantiates a new V1alpha1PullRequestGenerator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1PullRequestGenerator() *V1alpha1PullRequestGenerator {
	this := V1alpha1PullRequestGenerator{}
	return &this
}

// NewV1alpha1PullRequestGeneratorWithDefaults instantiates a new V1alpha1PullRequestGenerator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1PullRequestGeneratorWithDefaults() *V1alpha1PullRequestGenerator {
	this := V1alpha1PullRequestGenerator{}
	return &this
}

// GetBitbucketServer returns the BitbucketServer field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGenerator) GetBitbucketServer() V1alpha1PullRequestGeneratorBitbucketServer {
	if o == nil || o.BitbucketServer == nil {
		var ret V1alpha1PullRequestGeneratorBitbucketServer
		return ret
	}
	return *o.BitbucketServer
}

// GetBitbucketServerOk returns a tuple with the BitbucketServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGenerator) GetBitbucketServerOk() (*V1alpha1PullRequestGeneratorBitbucketServer, bool) {
	if o == nil || o.BitbucketServer == nil {
		return nil, false
	}
	return o.BitbucketServer, true
}

// HasBitbucketServer returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGenerator) HasBitbucketServer() bool {
	if o != nil && o.BitbucketServer != nil {
		return true
	}

	return false
}

// SetBitbucketServer gets a reference to the given V1alpha1PullRequestGeneratorBitbucketServer and assigns it to the BitbucketServer field.
func (o *V1alpha1PullRequestGenerator) SetBitbucketServer(v V1alpha1PullRequestGeneratorBitbucketServer) {
	o.BitbucketServer = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGenerator) GetFilters() []V1alpha1PullRequestGeneratorFilter {
	if o == nil || o.Filters == nil {
		var ret []V1alpha1PullRequestGeneratorFilter
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGenerator) GetFiltersOk() (*[]V1alpha1PullRequestGeneratorFilter, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGenerator) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []V1alpha1PullRequestGeneratorFilter and assigns it to the Filters field.
func (o *V1alpha1PullRequestGenerator) SetFilters(v []V1alpha1PullRequestGeneratorFilter) {
	o.Filters = &v
}

// GetGitea returns the Gitea field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGenerator) GetGitea() V1alpha1PullRequestGeneratorGitea {
	if o == nil || o.Gitea == nil {
		var ret V1alpha1PullRequestGeneratorGitea
		return ret
	}
	return *o.Gitea
}

// GetGiteaOk returns a tuple with the Gitea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGenerator) GetGiteaOk() (*V1alpha1PullRequestGeneratorGitea, bool) {
	if o == nil || o.Gitea == nil {
		return nil, false
	}
	return o.Gitea, true
}

// HasGitea returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGenerator) HasGitea() bool {
	if o != nil && o.Gitea != nil {
		return true
	}

	return false
}

// SetGitea gets a reference to the given V1alpha1PullRequestGeneratorGitea and assigns it to the Gitea field.
func (o *V1alpha1PullRequestGenerator) SetGitea(v V1alpha1PullRequestGeneratorGitea) {
	o.Gitea = &v
}

// GetGithub returns the Github field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGenerator) GetGithub() V1alpha1PullRequestGeneratorGithub {
	if o == nil || o.Github == nil {
		var ret V1alpha1PullRequestGeneratorGithub
		return ret
	}
	return *o.Github
}

// GetGithubOk returns a tuple with the Github field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGenerator) GetGithubOk() (*V1alpha1PullRequestGeneratorGithub, bool) {
	if o == nil || o.Github == nil {
		return nil, false
	}
	return o.Github, true
}

// HasGithub returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGenerator) HasGithub() bool {
	if o != nil && o.Github != nil {
		return true
	}

	return false
}

// SetGithub gets a reference to the given V1alpha1PullRequestGeneratorGithub and assigns it to the Github field.
func (o *V1alpha1PullRequestGenerator) SetGithub(v V1alpha1PullRequestGeneratorGithub) {
	o.Github = &v
}

// GetGitlab returns the Gitlab field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGenerator) GetGitlab() V1alpha1PullRequestGeneratorGitLab {
	if o == nil || o.Gitlab == nil {
		var ret V1alpha1PullRequestGeneratorGitLab
		return ret
	}
	return *o.Gitlab
}

// GetGitlabOk returns a tuple with the Gitlab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGenerator) GetGitlabOk() (*V1alpha1PullRequestGeneratorGitLab, bool) {
	if o == nil || o.Gitlab == nil {
		return nil, false
	}
	return o.Gitlab, true
}

// HasGitlab returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGenerator) HasGitlab() bool {
	if o != nil && o.Gitlab != nil {
		return true
	}

	return false
}

// SetGitlab gets a reference to the given V1alpha1PullRequestGeneratorGitLab and assigns it to the Gitlab field.
func (o *V1alpha1PullRequestGenerator) SetGitlab(v V1alpha1PullRequestGeneratorGitLab) {
	o.Gitlab = &v
}

// GetRequeueAfterSeconds returns the RequeueAfterSeconds field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGenerator) GetRequeueAfterSeconds() string {
	if o == nil || o.RequeueAfterSeconds == nil {
		var ret string
		return ret
	}
	return *o.RequeueAfterSeconds
}

// GetRequeueAfterSecondsOk returns a tuple with the RequeueAfterSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGenerator) GetRequeueAfterSecondsOk() (*string, bool) {
	if o == nil || o.RequeueAfterSeconds == nil {
		return nil, false
	}
	return o.RequeueAfterSeconds, true
}

// HasRequeueAfterSeconds returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGenerator) HasRequeueAfterSeconds() bool {
	if o != nil && o.RequeueAfterSeconds != nil {
		return true
	}

	return false
}

// SetRequeueAfterSeconds gets a reference to the given string and assigns it to the RequeueAfterSeconds field.
func (o *V1alpha1PullRequestGenerator) SetRequeueAfterSeconds(v string) {
	o.RequeueAfterSeconds = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *V1alpha1PullRequestGenerator) GetTemplate() V1alpha1ApplicationSetTemplate {
	if o == nil || o.Template == nil {
		var ret V1alpha1ApplicationSetTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1PullRequestGenerator) GetTemplateOk() (*V1alpha1ApplicationSetTemplate, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *V1alpha1PullRequestGenerator) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given V1alpha1ApplicationSetTemplate and assigns it to the Template field.
func (o *V1alpha1PullRequestGenerator) SetTemplate(v V1alpha1ApplicationSetTemplate) {
	o.Template = &v
}

func (o V1alpha1PullRequestGenerator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BitbucketServer != nil {
		toSerialize["bitbucketServer"] = o.BitbucketServer
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if o.Gitea != nil {
		toSerialize["gitea"] = o.Gitea
	}
	if o.Github != nil {
		toSerialize["github"] = o.Github
	}
	if o.Gitlab != nil {
		toSerialize["gitlab"] = o.Gitlab
	}
	if o.RequeueAfterSeconds != nil {
		toSerialize["requeueAfterSeconds"] = o.RequeueAfterSeconds
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1PullRequestGenerator struct {
	value *V1alpha1PullRequestGenerator
	isSet bool
}

func (v NullableV1alpha1PullRequestGenerator) Get() *V1alpha1PullRequestGenerator {
	return v.value
}

func (v *NullableV1alpha1PullRequestGenerator) Set(val *V1alpha1PullRequestGenerator) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1PullRequestGenerator) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1PullRequestGenerator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1PullRequestGenerator(val *V1alpha1PullRequestGenerator) *NullableV1alpha1PullRequestGenerator {
	return &NullableV1alpha1PullRequestGenerator{value: val, isSet: true}
}

func (v NullableV1alpha1PullRequestGenerator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1PullRequestGenerator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
