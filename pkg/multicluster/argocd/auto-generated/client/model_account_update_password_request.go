/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// AccountUpdatePasswordRequest struct for AccountUpdatePasswordRequest
type AccountUpdatePasswordRequest struct {
	CurrentPassword *string `json:"currentPassword,omitempty"`
	Name *string `json:"name,omitempty"`
	NewPassword *string `json:"newPassword,omitempty"`
}

// NewAccountUpdatePasswordRequest instantiates a new AccountUpdatePasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountUpdatePasswordRequest() *AccountUpdatePasswordRequest {
	this := AccountUpdatePasswordRequest{}
	return &this
}

// NewAccountUpdatePasswordRequestWithDefaults instantiates a new AccountUpdatePasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountUpdatePasswordRequestWithDefaults() *AccountUpdatePasswordRequest {
	this := AccountUpdatePasswordRequest{}
	return &this
}

// GetCurrentPassword returns the CurrentPassword field value if set, zero value otherwise.
func (o *AccountUpdatePasswordRequest) GetCurrentPassword() string {
	if o == nil || o.CurrentPassword == nil {
		var ret string
		return ret
	}
	return *o.CurrentPassword
}

// GetCurrentPasswordOk returns a tuple with the CurrentPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdatePasswordRequest) GetCurrentPasswordOk() (*string, bool) {
	if o == nil || o.CurrentPassword == nil {
		return nil, false
	}
	return o.CurrentPassword, true
}

// HasCurrentPassword returns a boolean if a field has been set.
func (o *AccountUpdatePasswordRequest) HasCurrentPassword() bool {
	if o != nil && o.CurrentPassword != nil {
		return true
	}

	return false
}

// SetCurrentPassword gets a reference to the given string and assigns it to the CurrentPassword field.
func (o *AccountUpdatePasswordRequest) SetCurrentPassword(v string) {
	o.CurrentPassword = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AccountUpdatePasswordRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdatePasswordRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AccountUpdatePasswordRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AccountUpdatePasswordRequest) SetName(v string) {
	o.Name = &v
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise.
func (o *AccountUpdatePasswordRequest) GetNewPassword() string {
	if o == nil || o.NewPassword == nil {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountUpdatePasswordRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil || o.NewPassword == nil {
		return nil, false
	}
	return o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *AccountUpdatePasswordRequest) HasNewPassword() bool {
	if o != nil && o.NewPassword != nil {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *AccountUpdatePasswordRequest) SetNewPassword(v string) {
	o.NewPassword = &v
}

func (o AccountUpdatePasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CurrentPassword != nil {
		toSerialize["currentPassword"] = o.CurrentPassword
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NewPassword != nil {
		toSerialize["newPassword"] = o.NewPassword
	}
	return json.Marshal(toSerialize)
}

type NullableAccountUpdatePasswordRequest struct {
	value *AccountUpdatePasswordRequest
	isSet bool
}

func (v NullableAccountUpdatePasswordRequest) Get() *AccountUpdatePasswordRequest {
	return v.value
}

func (v *NullableAccountUpdatePasswordRequest) Set(val *AccountUpdatePasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountUpdatePasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountUpdatePasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountUpdatePasswordRequest(val *AccountUpdatePasswordRequest) *NullableAccountUpdatePasswordRequest {
	return &NullableAccountUpdatePasswordRequest{value: val, isSet: true}
}

func (v NullableAccountUpdatePasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountUpdatePasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


