/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// RepositoryPluginAppSpec struct for RepositoryPluginAppSpec
type RepositoryPluginAppSpec struct {
	ParametersAnnouncement *[]RepositoryParameterAnnouncement `json:"parametersAnnouncement,omitempty"`
}

// NewRepositoryPluginAppSpec instantiates a new RepositoryPluginAppSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryPluginAppSpec() *RepositoryPluginAppSpec {
	this := RepositoryPluginAppSpec{}
	return &this
}

// NewRepositoryPluginAppSpecWithDefaults instantiates a new RepositoryPluginAppSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryPluginAppSpecWithDefaults() *RepositoryPluginAppSpec {
	this := RepositoryPluginAppSpec{}
	return &this
}

// GetParametersAnnouncement returns the ParametersAnnouncement field value if set, zero value otherwise.
func (o *RepositoryPluginAppSpec) GetParametersAnnouncement() []RepositoryParameterAnnouncement {
	if o == nil || o.ParametersAnnouncement == nil {
		var ret []RepositoryParameterAnnouncement
		return ret
	}
	return *o.ParametersAnnouncement
}

// GetParametersAnnouncementOk returns a tuple with the ParametersAnnouncement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryPluginAppSpec) GetParametersAnnouncementOk() (*[]RepositoryParameterAnnouncement, bool) {
	if o == nil || o.ParametersAnnouncement == nil {
		return nil, false
	}
	return o.ParametersAnnouncement, true
}

// HasParametersAnnouncement returns a boolean if a field has been set.
func (o *RepositoryPluginAppSpec) HasParametersAnnouncement() bool {
	if o != nil && o.ParametersAnnouncement != nil {
		return true
	}

	return false
}

// SetParametersAnnouncement gets a reference to the given []RepositoryParameterAnnouncement and assigns it to the ParametersAnnouncement field.
func (o *RepositoryPluginAppSpec) SetParametersAnnouncement(v []RepositoryParameterAnnouncement) {
	o.ParametersAnnouncement = &v
}

func (o RepositoryPluginAppSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ParametersAnnouncement != nil {
		toSerialize["parametersAnnouncement"] = o.ParametersAnnouncement
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryPluginAppSpec struct {
	value *RepositoryPluginAppSpec
	isSet bool
}

func (v NullableRepositoryPluginAppSpec) Get() *RepositoryPluginAppSpec {
	return v.value
}

func (v *NullableRepositoryPluginAppSpec) Set(val *RepositoryPluginAppSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryPluginAppSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryPluginAppSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryPluginAppSpec(val *RepositoryPluginAppSpec) *NullableRepositoryPluginAppSpec {
	return &NullableRepositoryPluginAppSpec{value: val, isSet: true}
}

func (v NullableRepositoryPluginAppSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryPluginAppSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
