/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1GitGenerator struct for V1alpha1GitGenerator
type V1alpha1GitGenerator struct {
	Directories *[]V1alpha1GitDirectoryGeneratorItem `json:"directories,omitempty"`
	Files *[]V1alpha1GitFileGeneratorItem `json:"files,omitempty"`
	PathParamPrefix *string `json:"pathParamPrefix,omitempty"`
	RepoURL *string `json:"repoURL,omitempty"`
	RequeueAfterSeconds *string `json:"requeueAfterSeconds,omitempty"`
	Revision *string `json:"revision,omitempty"`
	Template *V1alpha1ApplicationSetTemplate `json:"template,omitempty"`
}

// NewV1alpha1GitGenerator instantiates a new V1alpha1GitGenerator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1GitGenerator() *V1alpha1GitGenerator {
	this := V1alpha1GitGenerator{}
	return &this
}

// NewV1alpha1GitGeneratorWithDefaults instantiates a new V1alpha1GitGenerator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1GitGeneratorWithDefaults() *V1alpha1GitGenerator {
	this := V1alpha1GitGenerator{}
	return &this
}

// GetDirectories returns the Directories field value if set, zero value otherwise.
func (o *V1alpha1GitGenerator) GetDirectories() []V1alpha1GitDirectoryGeneratorItem {
	if o == nil || o.Directories == nil {
		var ret []V1alpha1GitDirectoryGeneratorItem
		return ret
	}
	return *o.Directories
}

// GetDirectoriesOk returns a tuple with the Directories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GitGenerator) GetDirectoriesOk() (*[]V1alpha1GitDirectoryGeneratorItem, bool) {
	if o == nil || o.Directories == nil {
		return nil, false
	}
	return o.Directories, true
}

// HasDirectories returns a boolean if a field has been set.
func (o *V1alpha1GitGenerator) HasDirectories() bool {
	if o != nil && o.Directories != nil {
		return true
	}

	return false
}

// SetDirectories gets a reference to the given []V1alpha1GitDirectoryGeneratorItem and assigns it to the Directories field.
func (o *V1alpha1GitGenerator) SetDirectories(v []V1alpha1GitDirectoryGeneratorItem) {
	o.Directories = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *V1alpha1GitGenerator) GetFiles() []V1alpha1GitFileGeneratorItem {
	if o == nil || o.Files == nil {
		var ret []V1alpha1GitFileGeneratorItem
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GitGenerator) GetFilesOk() (*[]V1alpha1GitFileGeneratorItem, bool) {
	if o == nil || o.Files == nil {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *V1alpha1GitGenerator) HasFiles() bool {
	if o != nil && o.Files != nil {
		return true
	}

	return false
}

// SetFiles gets a reference to the given []V1alpha1GitFileGeneratorItem and assigns it to the Files field.
func (o *V1alpha1GitGenerator) SetFiles(v []V1alpha1GitFileGeneratorItem) {
	o.Files = &v
}

// GetPathParamPrefix returns the PathParamPrefix field value if set, zero value otherwise.
func (o *V1alpha1GitGenerator) GetPathParamPrefix() string {
	if o == nil || o.PathParamPrefix == nil {
		var ret string
		return ret
	}
	return *o.PathParamPrefix
}

// GetPathParamPrefixOk returns a tuple with the PathParamPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GitGenerator) GetPathParamPrefixOk() (*string, bool) {
	if o == nil || o.PathParamPrefix == nil {
		return nil, false
	}
	return o.PathParamPrefix, true
}

// HasPathParamPrefix returns a boolean if a field has been set.
func (o *V1alpha1GitGenerator) HasPathParamPrefix() bool {
	if o != nil && o.PathParamPrefix != nil {
		return true
	}

	return false
}

// SetPathParamPrefix gets a reference to the given string and assigns it to the PathParamPrefix field.
func (o *V1alpha1GitGenerator) SetPathParamPrefix(v string) {
	o.PathParamPrefix = &v
}

// GetRepoURL returns the RepoURL field value if set, zero value otherwise.
func (o *V1alpha1GitGenerator) GetRepoURL() string {
	if o == nil || o.RepoURL == nil {
		var ret string
		return ret
	}
	return *o.RepoURL
}

// GetRepoURLOk returns a tuple with the RepoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GitGenerator) GetRepoURLOk() (*string, bool) {
	if o == nil || o.RepoURL == nil {
		return nil, false
	}
	return o.RepoURL, true
}

// HasRepoURL returns a boolean if a field has been set.
func (o *V1alpha1GitGenerator) HasRepoURL() bool {
	if o != nil && o.RepoURL != nil {
		return true
	}

	return false
}

// SetRepoURL gets a reference to the given string and assigns it to the RepoURL field.
func (o *V1alpha1GitGenerator) SetRepoURL(v string) {
	o.RepoURL = &v
}

// GetRequeueAfterSeconds returns the RequeueAfterSeconds field value if set, zero value otherwise.
func (o *V1alpha1GitGenerator) GetRequeueAfterSeconds() string {
	if o == nil || o.RequeueAfterSeconds == nil {
		var ret string
		return ret
	}
	return *o.RequeueAfterSeconds
}

// GetRequeueAfterSecondsOk returns a tuple with the RequeueAfterSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GitGenerator) GetRequeueAfterSecondsOk() (*string, bool) {
	if o == nil || o.RequeueAfterSeconds == nil {
		return nil, false
	}
	return o.RequeueAfterSeconds, true
}

// HasRequeueAfterSeconds returns a boolean if a field has been set.
func (o *V1alpha1GitGenerator) HasRequeueAfterSeconds() bool {
	if o != nil && o.RequeueAfterSeconds != nil {
		return true
	}

	return false
}

// SetRequeueAfterSeconds gets a reference to the given string and assigns it to the RequeueAfterSeconds field.
func (o *V1alpha1GitGenerator) SetRequeueAfterSeconds(v string) {
	o.RequeueAfterSeconds = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V1alpha1GitGenerator) GetRevision() string {
	if o == nil || o.Revision == nil {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GitGenerator) GetRevisionOk() (*string, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V1alpha1GitGenerator) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *V1alpha1GitGenerator) SetRevision(v string) {
	o.Revision = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *V1alpha1GitGenerator) GetTemplate() V1alpha1ApplicationSetTemplate {
	if o == nil || o.Template == nil {
		var ret V1alpha1ApplicationSetTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1GitGenerator) GetTemplateOk() (*V1alpha1ApplicationSetTemplate, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *V1alpha1GitGenerator) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given V1alpha1ApplicationSetTemplate and assigns it to the Template field.
func (o *V1alpha1GitGenerator) SetTemplate(v V1alpha1ApplicationSetTemplate) {
	o.Template = &v
}

func (o V1alpha1GitGenerator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Directories != nil {
		toSerialize["directories"] = o.Directories
	}
	if o.Files != nil {
		toSerialize["files"] = o.Files
	}
	if o.PathParamPrefix != nil {
		toSerialize["pathParamPrefix"] = o.PathParamPrefix
	}
	if o.RepoURL != nil {
		toSerialize["repoURL"] = o.RepoURL
	}
	if o.RequeueAfterSeconds != nil {
		toSerialize["requeueAfterSeconds"] = o.RequeueAfterSeconds
	}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1GitGenerator struct {
	value *V1alpha1GitGenerator
	isSet bool
}

func (v NullableV1alpha1GitGenerator) Get() *V1alpha1GitGenerator {
	return v.value
}

func (v *NullableV1alpha1GitGenerator) Set(val *V1alpha1GitGenerator) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1GitGenerator) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1GitGenerator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1GitGenerator(val *V1alpha1GitGenerator) *NullableV1alpha1GitGenerator {
	return &NullableV1alpha1GitGenerator{value: val, isSet: true}
}

func (v NullableV1alpha1GitGenerator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1GitGenerator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


