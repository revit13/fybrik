/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// V1alpha1OperationState struct for V1alpha1OperationState
type V1alpha1OperationState struct {
	FinishedAt *string `json:"finishedAt,omitempty"`
	// Message holds any pertinent messages when attempting to perform operation (typically errors).
	Message *string `json:"message,omitempty"`
	Operation *V1alpha1Operation `json:"operation,omitempty"`
	Phase *string `json:"phase,omitempty"`
	RetryCount *string `json:"retryCount,omitempty"`
	StartedAt *string `json:"startedAt,omitempty"`
	SyncResult *V1alpha1SyncOperationResult `json:"syncResult,omitempty"`
}

// NewV1alpha1OperationState instantiates a new V1alpha1OperationState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1alpha1OperationState() *V1alpha1OperationState {
	this := V1alpha1OperationState{}
	return &this
}

// NewV1alpha1OperationStateWithDefaults instantiates a new V1alpha1OperationState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1alpha1OperationStateWithDefaults() *V1alpha1OperationState {
	this := V1alpha1OperationState{}
	return &this
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise.
func (o *V1alpha1OperationState) GetFinishedAt() string {
	if o == nil || o.FinishedAt == nil {
		var ret string
		return ret
	}
	return *o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OperationState) GetFinishedAtOk() (*string, bool) {
	if o == nil || o.FinishedAt == nil {
		return nil, false
	}
	return o.FinishedAt, true
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *V1alpha1OperationState) HasFinishedAt() bool {
	if o != nil && o.FinishedAt != nil {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given string and assigns it to the FinishedAt field.
func (o *V1alpha1OperationState) SetFinishedAt(v string) {
	o.FinishedAt = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V1alpha1OperationState) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OperationState) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V1alpha1OperationState) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V1alpha1OperationState) SetMessage(v string) {
	o.Message = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *V1alpha1OperationState) GetOperation() V1alpha1Operation {
	if o == nil || o.Operation == nil {
		var ret V1alpha1Operation
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OperationState) GetOperationOk() (*V1alpha1Operation, bool) {
	if o == nil || o.Operation == nil {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *V1alpha1OperationState) HasOperation() bool {
	if o != nil && o.Operation != nil {
		return true
	}

	return false
}

// SetOperation gets a reference to the given V1alpha1Operation and assigns it to the Operation field.
func (o *V1alpha1OperationState) SetOperation(v V1alpha1Operation) {
	o.Operation = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *V1alpha1OperationState) GetPhase() string {
	if o == nil || o.Phase == nil {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OperationState) GetPhaseOk() (*string, bool) {
	if o == nil || o.Phase == nil {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *V1alpha1OperationState) HasPhase() bool {
	if o != nil && o.Phase != nil {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *V1alpha1OperationState) SetPhase(v string) {
	o.Phase = &v
}

// GetRetryCount returns the RetryCount field value if set, zero value otherwise.
func (o *V1alpha1OperationState) GetRetryCount() string {
	if o == nil || o.RetryCount == nil {
		var ret string
		return ret
	}
	return *o.RetryCount
}

// GetRetryCountOk returns a tuple with the RetryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OperationState) GetRetryCountOk() (*string, bool) {
	if o == nil || o.RetryCount == nil {
		return nil, false
	}
	return o.RetryCount, true
}

// HasRetryCount returns a boolean if a field has been set.
func (o *V1alpha1OperationState) HasRetryCount() bool {
	if o != nil && o.RetryCount != nil {
		return true
	}

	return false
}

// SetRetryCount gets a reference to the given string and assigns it to the RetryCount field.
func (o *V1alpha1OperationState) SetRetryCount(v string) {
	o.RetryCount = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *V1alpha1OperationState) GetStartedAt() string {
	if o == nil || o.StartedAt == nil {
		var ret string
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OperationState) GetStartedAtOk() (*string, bool) {
	if o == nil || o.StartedAt == nil {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *V1alpha1OperationState) HasStartedAt() bool {
	if o != nil && o.StartedAt != nil {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given string and assigns it to the StartedAt field.
func (o *V1alpha1OperationState) SetStartedAt(v string) {
	o.StartedAt = &v
}

// GetSyncResult returns the SyncResult field value if set, zero value otherwise.
func (o *V1alpha1OperationState) GetSyncResult() V1alpha1SyncOperationResult {
	if o == nil || o.SyncResult == nil {
		var ret V1alpha1SyncOperationResult
		return ret
	}
	return *o.SyncResult
}

// GetSyncResultOk returns a tuple with the SyncResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1alpha1OperationState) GetSyncResultOk() (*V1alpha1SyncOperationResult, bool) {
	if o == nil || o.SyncResult == nil {
		return nil, false
	}
	return o.SyncResult, true
}

// HasSyncResult returns a boolean if a field has been set.
func (o *V1alpha1OperationState) HasSyncResult() bool {
	if o != nil && o.SyncResult != nil {
		return true
	}

	return false
}

// SetSyncResult gets a reference to the given V1alpha1SyncOperationResult and assigns it to the SyncResult field.
func (o *V1alpha1OperationState) SetSyncResult(v V1alpha1SyncOperationResult) {
	o.SyncResult = &v
}

func (o V1alpha1OperationState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FinishedAt != nil {
		toSerialize["finishedAt"] = o.FinishedAt
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Operation != nil {
		toSerialize["operation"] = o.Operation
	}
	if o.Phase != nil {
		toSerialize["phase"] = o.Phase
	}
	if o.RetryCount != nil {
		toSerialize["retryCount"] = o.RetryCount
	}
	if o.StartedAt != nil {
		toSerialize["startedAt"] = o.StartedAt
	}
	if o.SyncResult != nil {
		toSerialize["syncResult"] = o.SyncResult
	}
	return json.Marshal(toSerialize)
}

type NullableV1alpha1OperationState struct {
	value *V1alpha1OperationState
	isSet bool
}

func (v NullableV1alpha1OperationState) Get() *V1alpha1OperationState {
	return v.value
}

func (v *NullableV1alpha1OperationState) Set(val *V1alpha1OperationState) {
	v.value = val
	v.isSet = true
}

func (v NullableV1alpha1OperationState) IsSet() bool {
	return v.isSet
}

func (v *NullableV1alpha1OperationState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1alpha1OperationState(val *V1alpha1OperationState) *NullableV1alpha1OperationState {
	return &NullableV1alpha1OperationState{value: val, isSet: true}
}

func (v NullableV1alpha1OperationState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1alpha1OperationState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


