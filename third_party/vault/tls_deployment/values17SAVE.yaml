global:
  enabled: true
  tlsDisable: false
server:
  extraEnvironmentVars:
    VAULT_CACERT: /vault/userconfig/vault-server-tls/vault.ca
  logLevel: debug
  logFormat: standard
  debug: true
  readinessProbe:
    enabled: false 
    # If you need to use a http path instead of the default exec
    # path: /v1/sys/health?standbyok=true

    # When a probe fails, Kubernetes will try failureThreshold times before giving up
    failureThreshold: 2
    # Number of seconds after the container has started before probe initiates
    initialDelaySeconds: 20
  # authDelegator enables a cluster role binding to be attached to the service
  # account.  This cluster role binding can be used to setup Kubernetes auth
  # method.  https://www.vaultproject.io/docs/auth/kubernetes.html
  authDelegator:
    enabled: true
  volumes: 
    - name: data
      emptyDir: {}
  extraVolumes:
    - type: secret
      name: vault-server-tls # Matches the ${SECRET_NAME} from above
  volumeMounts:
    - mountPath: /vault/data/
      name: data
      readOnly: false
  standalone:
    enabled: true
    config: |
      ui = true
      listener "tcp" {
        address = "[::]:8200"
        cluster_address = "[::]:8201"
        tls_cert_file = "/vault/userconfig/vault-server-tls/vault.crt"
        tls_key_file  = "/vault/userconfig/vault-server-tls/vault.key"
        tls_client_ca_file = "/vault/userconfig/vault-server-tls/vault.ca"
      }
      storage "file" {
        path = "/vault/data"
      }
      plugin_directory = "/usr/local/libexec/vault/"
  postStart:
    - "sh"
    - "-c"
    # Sleep command is needed to avoid synchronization issues with the container pod. Please see
    # https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/#discussion
    # FIXME: Use a proper way to configure Vault after Vault start-up
    - |
      sleep 5
      # vault operator init commands works only if no data exists
      rm -rf /vault/data/*
      vault operator init | tee /tmp/vault.init > /dev/null
      cat /tmp/vault.init | grep '^Unseal' | awk '{print $4}' | for key in $(cat -); do
        vault operator unseal $key
      done
      export ROOT_TOKEN=$(cat /tmp/vault.init | grep '^Initial' | awk '{print $4}')
      echo "Remove master keys from disk"
      #  shred /tmp/vault.init
      vault login $ROOT_TOKEN
