/*
Consolidate Services

Description of all APIs

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapiclient

import (
	"encoding/json"
)

// ProjectGlobalProjectsResponse struct for ProjectGlobalProjectsResponse
type ProjectGlobalProjectsResponse struct {
	Items *[]V1alpha1AppProject `json:"items,omitempty"`
}

// NewProjectGlobalProjectsResponse instantiates a new ProjectGlobalProjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectGlobalProjectsResponse() *ProjectGlobalProjectsResponse {
	this := ProjectGlobalProjectsResponse{}
	return &this
}

// NewProjectGlobalProjectsResponseWithDefaults instantiates a new ProjectGlobalProjectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectGlobalProjectsResponseWithDefaults() *ProjectGlobalProjectsResponse {
	this := ProjectGlobalProjectsResponse{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ProjectGlobalProjectsResponse) GetItems() []V1alpha1AppProject {
	if o == nil || o.Items == nil {
		var ret []V1alpha1AppProject
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectGlobalProjectsResponse) GetItemsOk() (*[]V1alpha1AppProject, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ProjectGlobalProjectsResponse) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []V1alpha1AppProject and assigns it to the Items field.
func (o *ProjectGlobalProjectsResponse) SetItems(v []V1alpha1AppProject) {
	o.Items = &v
}

func (o ProjectGlobalProjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableProjectGlobalProjectsResponse struct {
	value *ProjectGlobalProjectsResponse
	isSet bool
}

func (v NullableProjectGlobalProjectsResponse) Get() *ProjectGlobalProjectsResponse {
	return v.value
}

func (v *NullableProjectGlobalProjectsResponse) Set(val *ProjectGlobalProjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectGlobalProjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectGlobalProjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectGlobalProjectsResponse(val *ProjectGlobalProjectsResponse) *NullableProjectGlobalProjectsResponse {
	return &NullableProjectGlobalProjectsResponse{value: val, isSet: true}
}

func (v NullableProjectGlobalProjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectGlobalProjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


