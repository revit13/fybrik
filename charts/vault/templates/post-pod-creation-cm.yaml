kind: ConfigMap
apiVersion: v1
metadata:
  namespace: {{ .Release.Namespace }} 
  name: vault-poststart-cm
data:
  poststart.sh: |
      rm -rf /vault/data/*
      vault operator init | tee /tmp/vault.init > /dev/null
      cat /tmp/vault.init
      cat /tmp/vault.init | grep '^Unseal' | awk '{print $4}' | for key in $(cat -); do
          echo $key
          vault operator unseal $key
      done
      token=`cat /tmp/vault.init | grep 'Initial Root Token:' | awk '{print $4}'`; vault login $token
      # configuring kubernetes auth method and use it later to create roles.
      vault auth enable kubernetes
{{- if semverCompare "<1.21-0" .Capabilities.KubeVersion.Version }}
      vault write auth/kubernetes/config kubernetes_host="https://kubernetes.default.svc:443"
{{- else }}
      vault write auth/kubernetes/config issuer="https://kubernetes.default.svc" kubernetes_host="https://kubernetes.default.svc:443" disable_iss_validation=true
{{- end }}
      # register and enable secret engine
      SHA256=$(sha256sum /usr/local/libexec/vault/vault-plugin-secrets-kubernetes-reader | cut -d ' ' -f1)
      vault plugin register -sha256=$SHA256 secret vault-plugin-secrets-kubernetes-reader
      vault secrets enable -path=kubernetes-secrets vault-plugin-secrets-kubernetes-reader
      # create policy to access secrets
      # NOTE: fybrik/dataset-creds/ secret engine is enabled by the manager and is used temporarily
      # to store dataset credentials.
      vault policy write "allow-all-dataset-creds" - <<EOF
      path "kubernetes-secrets/*" {
      capabilities = ["create", "read", "update", "delete", "list"]
      }
      EOF
      # allow modules running in fybrik-blueprints namespace to access dataset credentials
      vault write auth/kubernetes/role/module bound_service_account_names="*" bound_service_account_namespaces="{{ .Values.modulesNamespace }}" policies="allow-all-dataset-creds" ttl=24h
      # allow modules running in fybrik-system namespace to access dataset credentials
      vault write auth/kubernetes/role/fybrik bound_service_account_names="*" bound_service_account_namespaces="{{ .Release.Namespace }}" policies="allow-all-dataset-creds" ttl=24h
      # enable userpass auth method
      vault auth enable userpass
      vault write auth/userpass/users/data_provider password=password policies="allow-all-dataset-creds"

